{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../src/route.js","../src/utils.js","../src/controls/InputNumber.svelte","../src/controls/InputDurationMin.svelte","../src/controls/InputCheckbox.svelte","../src/Settings.svelte","../src/TreeItem.svelte","../src/TreeItemOption.svelte","../src/pieces/SVGPiece.svelte","../src/pieces/SVGItem.svelte","../src/pieces/SVGDrawing.svelte","../src/pieces/utils.js","../src/pieces/Group.js","../src/Component.svelte","../src/ChildrenPositions.svelte","../src/estimation.js","../src/Estimation.svelte","../src/ListeDebit.svelte","../src/ensembles/Ensemble.svelte","../src/controls/InputSelect.svelte","../src/draw/Cote.svelte","../src/pieces/piece.js","../src/ensembles/Porte.svelte","../src/ensembles/Caisson.svelte","../src/ensembles/Etagere.svelte","../src/ensembles/Facade.svelte","../src/ensembles/Tiroir.svelte","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value' || descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    let unsubscribe;\n    if (is_crossorigin()) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        detach(iframe);\n        if (unsubscribe)\n            unsubscribe();\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next, lookup.has(block.key));\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.22.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","\nexport function routeInfo(hash) {\n  const path = hash.substr(2)\n  const mcomp = path.match(/^component\\/(.*)$/)\n  const msettings = path.match(/^settings$/)\n  return {\n    component_id:       mcomp ? `component-${mcomp[1]}` : null,\n    component_selector: mcomp ? `#component-${mcomp[1]}` : null,\n    component_path:     mcomp ? mcomp[1] : null,\n    settings:           !!msettings,\n    root:               path == '',\n  }\n}\n\n// Take a callback. The callback is given as argument the routeInfo and should\n// return a list of elements that are target for the current route or none if\n// there is no target.\nexport function routeDeclare(cb) {\n  let previousTargets = []\n\n  function onHashChange(){\n    if(previousTargets) for(let t of previousTargets) if(t) {\n      console.log('route away', t)\n      t.classList.remove('target')\n    }\n    previousTargets = cb(routeInfo(window.location.hash))\n    if(previousTargets) for(let t of previousTargets) if(t) {\n      t.classList.add('target')\n      console.log('route to', t)\n    }\n  }\n\n  window.addEventListener(\"hashchange\", onHashChange, false);\n  window.addEventListener(\"load\", onHashChange, false);\n  return onHashChange;\n}\n","\nexport function cleanObject(src){\n  return Object.keys(src)\n    .filter(k => (src[k] !== null && src[k] !== undefined))\n    .reduce((m, k) => (m[k] = src[k], m), {})\n}\n\nexport function pipeline(data, ...operations){\n  let res = data\n  for(let i = 0; i < operations.length; i++) {\n    res = operations[i](res)\n  }\n  return res\n}\n\nexport function nextId(list) {\n  return list.reduce((id, item) => Math.max(id, item.id+1), list.length)\n}\n\nexport function reduceToObject(id, idval) {\n  return (obj, item) => {\n    if(!obj) obj = {}\n    obj[item[id || 0]] = (id == null || idval) ? item[idval || 1] : item\n    return obj\n  }\n}\nexport function arrayToObject(array, id, idval) {\n  array.reduce(reduceToObject(array, id, idval), {})\n}\n","<script>\n\n  export let value = null\n  export let def = null\n  export let force = false\n  export let min = null\n  export let max = null\n  export let step = null\n  export let size = 5\n\n  $: ui = {\n    placeholder: def,\n    min: force ? def : min,\n    max: force ? def : max,\n    step: step || 'any',\n  }\n\n  //let uiValue = value\n  //$: value = (uiValue == null) ? undefined : uiValue\n\n</script>\n\n<input\n  style=\"width: {size+1}em\"\n  type=number\n  bind:value={value}\n  placeholder={ui.placeholder}\n  min={ui.min}\n  max={ui.max}\n  step={ui.step}\n  />\n","<script>\n\n  export let value = null\n  export let def = null\n  export let size = 5\n  export let step = \"any\"\n  export let title = \"\";\n\n</script>\n\n<input\n  style=\"width: {size+1}em\"\n  type=number\n  bind:value={value}\n  placeholder={def}\n  step={step}\n  title={title}\n  /> min\n","<script>\n\n  export let checked = null\n  export let def = null\n  export let force = false\n  export let tristate = true\n\n  function change(e){\n    let prev = !e.target.checked\n    let curr = e.target.checked\n\n    if(e.target.readOnly) {\n      checked = curr\n    } else if(prev == def && tristate && def !== null) {\n      checked = null\n      e.target.checked = prev\n    } else {\n      checked = curr\n    }\n  }\n\n</script>\n\n<input\n  type=checkbox\n  data-def={def}\n  data-force={force}\n  data-checked={checked}\n  checked={(!checked && checked !== false) ? def : checked}\n  readonly={tristate ? (!checked && checked !== false) : force}\n  disabled={force}\n  on:change={change}\n  />\n\n","<script>\n  import { getContext } from 'svelte';\n  import { get } from 'svelte/store';\n  import { cleanObject, reduceToObject } from './utils.js';\n  import { routeDeclare } from './route.js';\n  import InputNumber from './controls/InputNumber.svelte';\n  import InputDurationMin from './controls/InputDurationMin.svelte';\n  import InputCheckbox from './controls/InputCheckbox.svelte';\n\n  export let settings;\n  export let settings_opened = false\n\n  let componentNames = Object.keys(getContext('App-components'))\n\n  let def = {\n    cubeprice: 1440,\n    cubemargin: 135,\n    postes_estimations: [],\n  }\n\n  let ui = {}\n  settings.subscribe(settings => {\n    ui = settings\n  })\n\n  $: ui = {\n    postes_estimations: [],\n    ...ui\n  }\n\n  let merged = {}\n  $: merged = {\n    ...def,\n    ...cleanObject(ui),\n  }\n  $: settings.set(merged)\n\n  let root_element;\n  routeDeclare((route) => {\n    settings_opened = route.settings\n    return route.settings ? [root_element] : []\n  })\n\n  function addEstim(){\n    let estimName = prompt(\"Quel nom donner à l'estimation :\")\n    if(estimName) ui.postes_estimations = [...ui.postes_estimations, {\n      name: estimName,\n      value: 0,\n      indice: 'constant',\n      components: componentNames.reduce((h,c) => (h[c]=true, h), {}),\n    }]\n    console.log(ui.postes_estimations)\n  }\n\n  function removeEstim(idx){\n    ui.postes_estimations.splice(idx, 1)\n    ui.postes_estimations = ui.postes_estimations\n  }\n\n  function renameEstim(idx){\n    let poste = ui.postes_estimations[idx]\n    let newName = prompt(`Renommer la phase \"${poste.name}\" en :`, poste.name)\n    if(!newName) return;\n    ui.postes_estimations[idx].name = newName\n  }\n\n  function availableComp(ui, idx) {\n    return componentNames.filter(c => ui.postes_estimations[idx].components[c])\n  }\n\n  function open(){\n    let input = document.createElement('input');\n    input.style.display = 'none';\n    input.setAttribute('type', 'file')\n    input.addEventListener('change', (e) => {\n      let file = e.target.files[0];\n      if (!file) return\n\n      let reader = new FileReader();\n      reader.onload = (e) => {\n        let data = JSON.parse(e.target.result)\n        if(data.settings) settings.set(data.settings)\n      }\n      reader.readAsText(file);\n    }, false)\n\n    document.body.appendChild(input);\n    input.click();\n    document.body.removeChild(input);\n  }\n</script>\n\n<style>\n  .estim label {\n    display: inline\n  }\n</style>\n\n<div class=\"routable\" bind:this={root_element}>\n  <button on:click={(e) => window.location.hash = '#/'}>Fermer</button>\n  <hr/>\n\n  <label><span>Prix du bois : </span><InputNumber bind:value={ui.cubeprice} def={def.cubeprice} min=0/> €</label>\n  <label><span>Marge de cubage : </span><InputNumber bind:value={ui.cubemargin} def={def.cubemargin} min=0/> %</label>\n\n  <h2>Postes</h2>\n  <table class=\"estim\">\n    <tr>\n      <th>Nom</th>\n      <th>Temps (min)</th>\n      <th>Indice</th>\n      <th>&nbsp;</th>\n      {#each componentNames as comp}\n        <th>{comp}</th>\n      {/each}\n    </tr>\n    {#each merged.postes_estimations as estim, idx}\n      <tr>\n        <td>{estim.name} :</td>\n        <td><InputDurationMin bind:value={ui.postes_estimations[idx].value} /></td>\n        <td>\n          <select bind:value={ui.postes_estimations[idx].indice}>\n            <option value=\"\">(désactivé)</option>\n            <optgroup label=\"par opération...\">\n              <option value=\"constant\">une fois pour toutes</option>\n              <option value=\"per_component\">par élément ({availableComp(ui, idx).join(', ')})</option>\n              <option value=\"per_ferrage_charniere\">par ferrage de charnières</option>\n              <option value=\"tenon\">par tenon</option>\n            </optgroup>\n            <optgroup label=\"par type de pièce...\">\n              <option value=\"m2_trav_mont_cp\">par m² de montants ou traverses à contre-profil</option>\n              <option value=\"m2_trav_mont_ncp\">par m² de montants ou traverses (sauf contre-profil)</option>\n              <option value=\"m2_trav_mont\">par m² de montants ou traverses (tous)</option>\n              <option value=\"m2_panneau\">par m² de panneaux montés en rainure</option>\n              <option value=\"m2_panneau_seul\">par m² de panneaux libres</option>\n              <option value=\"m2_panneau_tous\">par m² de panneaux (tous)</option>\n              <option value=\"m2_cote\">par m² de côtés de tiroir</option>\n              <option value=\"m2_plateau\">par m² (toutes pièces)</option>\n              <option value=\"nb_trav_mont_cp\">par nombre de montants ou traverses à contre-profil</option>\n              <option value=\"nb_trav_mont_ncp\">par nombre de montants ou traverses (sauf contre-profil)</option>\n              <option value=\"nb_trav_mont\">par nombre de montants ou traverses (tous)</option>\n              <option value=\"nb_panneau\">par nombre de panneaux montés en rainure</option>\n              <option value=\"nb_panneau_seul\">par nombre de panneaux libres</option>\n              <option value=\"nb_panneau_tous\">par nombre de panneaux (tous)</option>\n              <option value=\"nb_cote\">par nombre de côtés de tiroir</option>\n              <option value=\"nb_plateau\">par nombre total de pièces</option>\n            </optgroup>\n            <optgroup label=\"par épaisseur...\">\n              <option value=\"m2_ep0_20\">par m² de panneau (ep ⩽ 20)</option>\n              <option value=\"m2_ep20_plus\">par m² de pièces (ep &gt; 20)</option>\n              <option value=\"nb_ep0_20\">par panneau (ep ⩽ 20)</option>\n              <option value=\"nb_ep20_plus\">par nombre de pièces (ep &gt; 20)</option>\n            </optgroup>\n          </select>\n        </td>\n        <td>\n          <button on:click={e => removeEstim(idx)}>🗑</button>\n          <button on:click={e => renameEstim(idx)}>✎</button>\n        </td>\n        {#each componentNames as comp}\n          <td>\n            <label>\n              <InputCheckbox bind:checked={ui.postes_estimations[idx].components[comp]} title={comp}/>\n              {comp.substr(0,2)}\n            </label>\n          </td>\n        {/each}\n      </tr>\n    {/each}\n    <li><button on:click={e => addEstim()}>Ajouter un poste</button></li>\n  </table>\n\n  <hr/>\n  <button on:click={(e) => window.location.hash = '#/'}>Fermer</button>\n  <button on:click={open}>Ouvrir...</button>\n  <details>\n    <summary>Contenu des préférences</summary>\n    <pre>{JSON.stringify(merged, null, 2)}</pre>\n  </details>\n</div>\n","<script>\n  import { routeInfo } from './route.js';\n\n  export let data = {};\n  export let path = '0';\n\n  let selected = false\n\n  function onHashChange(){\n    const route = routeInfo(window.location.hash)\n    selected = (route.component_selector === `#component-${path}`)\n  }\n\n  window.addEventListener(\"hashchange\", onHashChange, false);\n  window.addEventListener(\"load\", onHashChange, false);\n</script>\n\n<style>\n  .selected {\n    font-weight: bold;\n  }\n</style>\n\n<a href=\"#/component/{path}\" class:selected={selected}>{data.type} {data.name}</a>\n{#if data.children}\n<ul>\n  {#each data.children as child}\n  {#if child.type}\n  <li>\n    <svelte:self path=\"{path}-{child.id}\" data={child} />\n  </li>\n  {/if}\n  {/each}\n</ul>\n{/if}\n","<script>\n  import { routeInfo } from './route.js';\n\n  export let data = {};\n  export let path = '0';\n  export let prefix = '';\n  export let indent = \"\\u2003\"; // &emsp;\n\n  let selected = false\n\n  function onHashChange(){\n    const route = routeInfo(window.location.hash)\n    selected = (route.component_selector === `#component-${path}`)\n  }\n\n  window.addEventListener(\"hashchange\", onHashChange, false);\n  window.addEventListener(\"load\", onHashChange, false);\n</script>\n\n<option value=\"#/component/{path}\" class:selected={selected} selected={selected ? 'selected' :\n''}>{prefix}{data.type} {data.name}</option>\n{#if data.children}\n  {#each data.children as child}\n  {#if child.type}\n    <svelte:self path=\"{path}-{child.id}\" data={child} prefix={prefix + indent} indent={indent}/>\n  {/if}\n  {/each}\n{/if}\n","<script>\n  export let piece;\n  export let pos;\n\n  let polyline\n\n  $: polyline = piece.projection_polyline(pos).map(co => co.join(',')).join(' ')\n</script>\n<style>\n  rect.outline {\n    fill: rgb(255,255,255);\n    fill-opacity: 0.5;\n    stroke-width: 1;\n    stroke:rgb(0,0,0);\n  }\n</style>\n\n<polyline class=\"outline\" points={polyline} fill=none stroke=black data-name={piece.name} />\n","<script>\n  import SVGPiece from '../pieces/SVGPiece.svelte';\n\n  export let item;\n  export let pos;\n</script>\n\n{#if item.type == 'Piece' }\n  <SVGPiece piece={item} pos={pos} />\n{:else if item.type == 'Group' }\n  <g transform=\"translate({item.projection_position(pos)[0]}, {item.projection_position(pos)[1]})\" data-name={item.name}>\n  {#each item.pieces as p}\n    <svelte:self item={p} pos={pos} />\n  {/each}\n  </g>\n{:else}\n  { console.warn(\"Unknown item.type for\", item) }\n{/if}\n","<script>\n  import SVGItem from '../pieces/SVGItem.svelte';\n\n  export let pieces;\n  export let zoom = 0.25;\n  export let name = pieces.name || \"Dessin\"\n\n  $: pieces_list = (pieces instanceof Array) ? pieces : pieces.individual()\n\n  let svgElement;\n\n  $: [xmax, ymax, zmax] = pieces_list\n    .map(p => p.bounding_box())\n    .map(b => [b.xmax, b.ymax, b.zmax])\n    .reduce((b0, b1) => [Math.max(b0[0], b1[0]), Math.max(b0[1], b1[1]), Math.max(b0[2], b1[2])], [0, 0, 0])\n\n  function save(){\n    let markup = svgElement.outerHTML\n    // TODO: detect filename\n    let filename = (prompt(\"Nom du fichier :\", name) || \"dessin\") + \".svg\"\n\n    let file = new window.File([markup], filename, {\n      type: 'image/svg+xml'\n    })\n    let url = URL.createObjectURL(file);\n\n    try {\n      let a = document.createElement('a');\n      a.href = url;\n      a.style.display = 'none';\n      a.setAttribute('download', filename);\n\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    } finally {\n      URL.revokeObjectURL(url)\n    }\n  }\n</script>\n\n<h3>{name}</h3>\n\n<p>\n  Zoom : <input type=range bind:value={zoom} min=0 max=1 step=.05> {zoom*100} %\n  <br/>\n  <a href=\"javascript:void(0)\" on:click={save}>Enregistrer image</a>\n</p>\n<svg\n    bind:this={svgElement}\n    data-count={pieces_list.length}\n    width=\"{5 + zoom*xmax + 5 + zoom*zmax + 5}\"\n    height=\"{5 + zoom*ymax + 5 + zoom*zmax + 5}\">\n  <g transform=\"translate(5, {5 + zoom*ymax}) scale({zoom} {zoom})\">\n    {#each pieces_list as piece}\n      <SVGItem item={piece} pos=\"xy\" />\n    {/each}\n  </g>\n  <g transform=\"translate({5 + zoom*xmax + 10}, {5 + zoom*ymax}) scale({zoom} {zoom})\">\n    {#each pieces_list as piece}\n      <SVGItem item={piece} pos=\"zy\" />\n    {/each}\n  </g>\n  <g transform=\"translate(5, {5 + zoom*(ymax) + 5}) scale({zoom} {zoom})\">\n    {#each pieces_list as piece}\n      <SVGItem item={piece} pos=\"xZ\" />\n    {/each}\n  </g>\n</svg>\n","export function get_position(pos){\n  switch(pos){\n    case 'left':   case 'l': case 'gauche':  case 'ga': case 'zy': case 'x': return 'zy';\n    case 'right':  case 'r': case 'droite':  case 'dr': case 'Zy': case 'X': return 'Zy';\n    case 'top':    case 't': case 'haut':    case 'h':  case 'xZ': case 'y': return 'xZ';\n    case 'bottom': case 'b': case 'bas':                case 'xz': case 'Y': return 'xz';\n    case 'front':  case 'F': case 'avant':   case 'av': case 'xy': case 'z': return 'xy';\n    case 'back':   case 'B': case 'arrière': case 'ar': case 'Xy': case 'Z': return 'Xy';\n    default: throw `Unknown position ${pos}`\n  }\n}\n\nexport function get_orient(orient){\n  switch(orient){\n    case 'xyz': case 'xzy':\n    case 'yxz': case 'yzx':\n    case 'zxy': case 'zyx':\n      return orient\n    default:\n      throw `Unknown orient ${orient}`\n  }\n}\n\n","import { get_position } from './utils.js';\n\nexport default class Group {\n\n  constructor(pieces, name, component_type) {\n    this.component_type = component_type\n    this.type   = 'Group'\n    this.pieces = pieces || []\n    this.name   = name\n    this.x = 0\n    this.y = 0\n    this.z = 0\n    this.features = []\n  }\n\n  individual() {\n    return this.pieces.reduce((res, p) => res.concat(p.individual().map(p => p.prefix_name(this.name))), [])\n  }\n\n  shallow(){\n    return this.update({ pieces: this.pieces.filter(p => !(p instanceof Group)) })\n  }\n\n  flat_groups(nameprefix, total) {\n    let groups = []\n    let pieces = []\n    for(let p of this.pieces) {\n      if(p instanceof Group) {\n        groups = groups.concat(p.flat_groups(`${nameprefix || ''}${this.name} `))\n      } else {\n        pieces.push(p)\n      }\n    }\n    groups = [\n      this.update({\n        pieces: pieces,\n        name: `${nameprefix || ''}${this.name}`}),\n    ].concat(groups)\n\n    if (total) {\n      groups.push(this.update({\n        pieces: this.individual(),\n        name: `${nameprefix || ''}Total ${this.name}`}))\n    }\n\n    return groups\n  }\n\n  surface() {\n    return this.pieces.reduce((s,p) => s + p.surface(), 0)\n  }\n\n  get nombre_tenons(){\n    return this.pieces.reduce((n, p) => n + p.nombre_tenons, 0)\n  }\n\n  update(props) {\n    return this.update_new({...this, ...props})\n  }\n\n  update_new(props) {\n    return Object.assign(Object.create(Group.prototype), props)\n  }\n\n  add_pieces(pieces) {\n    return this.update({pieces: [...this.pieces, ...pieces]})\n  }\n\n  position(x, y, z){\n    return this.update({\n      'x': (x || x == 0) ? x : this.x,\n      'y': (y || y == 0) ? y : this.y,\n      'z': (z || z == 0) ? z : this.z,\n    })\n  }\n\n  get largeur() {\n    let bb = this.bounding_box()\n    return bb.xmax - bb.xmin\n  }\n\n  get hauteur() {\n    let bb = this.bounding_box()\n    return bb.ymax - bb.ymin\n  }\n\n  get profondeur() {\n    let bb = this.bounding_box()\n    return bb.zmax - bb.zmin\n  }\n\n  bounding_box(){\n    let keys = {\n      xmin: Math.min,\n      ymin: Math.min,\n      zmin: Math.min,\n      xmax: Math.max,\n      ymax: Math.max,\n      zmax: Math.max,\n    }\n    let res = this.pieces\n      .map(p => p.bounding_box())\n      .reduce((bounds, piece) => bounds === null ? piece : (\n        Object.keys(keys).reduce((res, key) => ({...res, [key]: keys[key](bounds[key], piece[key])}), {})\n      ), null) || {}\n    return {\n      xmin: this.x + (res.xmin || 0),\n      xmax: this.x + (res.xmax || 0),\n      ymin: this.y + (res.ymin || 0),\n      ymax: this.y + (res.ymax || 0),\n      zmin: this.z + (res.zmin || 0),\n      zmax: this.z + (res.zmax || 0),\n    }\n  }\n\n  // axis := 'x' | 'y' | 'z' | 'X' | 'Y' | 'Z'\n  // returns [translation] (negated if axis is uppercase)\n  dim(axis){\n    let sign = (axis == axis.toLowerCase()) ? 1 : -1;\n    axis = axis.toLowerCase()\n    return [sign * this[axis]]\n  }\n\n  projection_position(pos){\n    pos = get_position(pos)\n    return [this.dim(pos[0]), -this.dim(pos[1])]\n  }\n\n  // add features to the piece if they do not exist yet\n  // example: group.add_features(\"porte-facade\")\n  add_features() {\n    return this.update({\n      features: [...this.features, ...Array.from(arguments, x => x && !this.features.includes(x))],\n    })\n  }\n\n  count_features() {\n    return this.pieces\n      .map(piece => piece.count_features(...arguments))\n      .reduce((res,counts) => {\n        for(let feat in counts) {\n          res[feat] = (res[feat] || 0) + counts[feat]\n        }\n        return res;\n      }, this.features)\n  }\n}\n","<script>\n/*\ndata flow:\n\n- root component pass data to child initdata\n- in child:  data = {...initdata, opt, ui, children}\n- child comp pass data to Component\n- when child data changes, Component fires datachange to root\n- child Component pass data.children[i] to grandchild initdata\n- when data changes in grandchild comp, child Component set it to children\n- children is passed from Component to child element\n- child element recomputes data\n- child Component pass updated data to parent\n\n*/\n\n  import { getContext, setContext, createEventDispatcher } from 'svelte';\n  import { routeDeclare } from './route.js';\n  import { nextId } from './utils.js';\n\n  const dispatch = createEventDispatcher();\n  let components = getContext('App-components')\n  let layout = 'all';\n  getContext('settings').subscribe(settings => {\n    layout = settings.component_layout\n  })\n\n  export let data\n  export let state = {}\n  export let childrenState = []\n  export let children = data.children || []\n  export let path = `${getContext('Component-path')}-${data.id}`\n\n  /*\n  $: console.log(`Component ${data.type}(${path}) data =`, data)\n  $: console.log(`Component ${data.type}(${path}) state =`, state)\n  $: console.log(`Component ${data.type}(${path}) childrenState =`, childrenState)\n  $: console.log(`Component ${data.type}(${path}) children =`, children)\n  $: console.log(`Component ${data.type}(${path}) path =`, path)\n  */\n\n  setContext('Component-path', path)\n\n  dispatch('datachange', {data, state})\n  //$: dispatch('datachange', {data})\n  //$: dispatch('datachange', {state})\n  //$: console.log(`${data.type}(${path}) datachange!`), dispatch('datachange', {state, data})\n  $: dispatchDatachange(state, data)\n\n  function dispatchDatachange(state, data){\n    //console.log(`${data.type}(${path}) datachange!`)\n    dispatch('datachange', {state, data})\n  }\n\n  function renameChild(i){\n    let name = prompt(`Renommer \"${children[i].name}\" en :`, children[i].name) || children[i].name\n    children[i].name = name\n  }\n\n  function deleteChild(i){\n    if(!confirm(`Supprimer ${children[i].name} ?`)) return\n    let children2 = [...children]\n    children2.splice(i, 1)\n    console.log(\"delete\", i, children, children2)\n    children = children2\n  }\n\n  function onDataChange(e, i){\n    //console.log(`${data.type}(${path}).children[${i}] datachange{${Object.keys(e.detail).join()}} = %o`, e.detail);\n    if(e.detail.data)  children[i] = e.detail.data\n    if(e.detail.state) childrenState[i] = e.detail.state\n  }\n\n  // manually set target class because when svelte modified an element class\n  // list, it removes any manually set classes with the classList API.\n  let target = false\n  routeDeclare(route => {\n    target = (route.component_path == path)\n  })\n\n  function setLayout(e, name){\n    if(e) e.preventDefault()\n    layout = name\n    getContext('settings').update(settings => ({\n      ...settings,\n      component_layout: layout,\n    }))\n  }\n\n  function addChild(type){\n    let id = nextId(children)\n    let name = prompt(\"Nom du sous-ensemble :\", `${path}-${id}`) || `${path}-${id}`\n    children = [...children, {\n      type: type,\n      name: name,\n      id:   id\n    }]\n  }\n\n</script>\n\n<style>\n  .debug{\n    display: none;\n  }\n  .component.target, .component:target {\n    height: 100%;\n    display: flex;\n    flex-flow: column nowrap;\n  }\n\n  .component-grid {\n    flex: 1 1 auto;\n    height: 100%;\n    overflow: auto;\n  }\n\n  ul.tabs {\n    flex: 0 0 auto;\n    margin: 0;\n    background-color: var(--light-bg-color);\n    border-bottom: solid 1px var(--border-color);\n  }\n  ul.tabs > li:last-child {\n    border-right: solid 1px var(--border-color);\n  }\n  ul.tabs > li {\n    border-top: solid 1px var(--border-color);\n    border-left: solid 1px var(--border-color);\n    margin: 0;\n    padding: 0;\n    margin-top: 2px;\n    display: inline;\n  }\n  ul.tabs > li > a {\n    padding: 0 1em;\n  }\n  ul.tabs > li > a.active {\n    background-color: white;\n  }\n\n  :global(.layout-plan) .component-grid > :not(.component-grid-plan) {\n    display: none;\n  }\n\n  :global(.layout-dim) .component-grid > :not(.component-grid-dim) {\n    display: none;\n  }\n\n  :global(.layout-tables) .component-grid > :not(.component-grid-tables) {\n    display: none;\n  }\n\n  :global(.layout-children) .component-grid > :not(.component-grid-plan):not(.component-grid-children) {\n    display: none;\n  }\n  :global(.layout-children) .component-grid > .component-grid-plan {\n    order: 1;\n    flex: 0 0 auto;\n    display: unset;\n    border-right: solid 1px var(--border-color);\n    overflow: auto;\n    resize: horizontal;\n  }\n  :global(.layout-children) .component-grid > .component-grid-children {\n    order: 2;\n    flex: 1 1 auto;\n    display: unset;\n    overflow: auto;\n  }\n  :global(.layout-children) .component-grid {\n    display: flex;\n    flex-flow: row nowrap;\n  }\n\n  :global(.layout-plan-dim) .component-grid > * {\n    display: none;\n  }\n  :global(.layout-plan-dim) .component-grid > .component-grid-plan {\n    order: 1;\n    flex: 0 0 auto;\n    display: unset;\n    border-right: solid 1px var(--border-color);\n    overflow: auto;\n    resize: horizontal;\n  }\n  :global(.layout-plan-dim) .component-grid > .component-grid-dim {\n    order: 2;\n    flex: 1 1 auto;\n    display: unset;\n    overflow: auto;\n  }\n  :global(.layout-plan-dim) .component-grid {\n    display: flex;\n    flex-flow: row nowrap;\n  }\n\n  @media print {\n    .component, .component-grid, .component-grid > * {\n      display: block !important;\n      overflow: visible !important;\n    }\n  }\n</style>\n\n<div class=\"routable component layout-{layout}\" class:target={target} id=\"component-{path}\">\n  <ul class=\"tabs\">\n    <li><a href=\"@\" on:click={e => setLayout(e, 'all')}      class:active={layout=='all'}>Tout</a></li>\n    <li><a href=\"@\" on:click={e => setLayout(e, 'plan')}     class:active={layout=='plan'}>Plan</a></li>\n    <li><a href=\"@\" on:click={e => setLayout(e, 'plan-dim')} class:active={layout=='plan-dim'}>Plan + Dimensions</a></li>\n    <li><a href=\"@\" on:click={e => setLayout(e, 'dim')}      class:active={layout=='dim'}>Dimensions</a></li>\n    <li><a href=\"@\" on:click={e => setLayout(e, 'tables')}   class:active={layout=='tables'}>Tableaux</a></li>\n    <li><a href=\"@\" on:click={e => setLayout(e, 'children')} class:active={layout=='children'}>Sous-éléments</a></li>\n  </ul>\n  <div class=\"component-grid\">\n    <div class=\"component-grid-plan\">\n      <slot name=\"plan\"></slot>\n    </div>\n    <div class=\"component-grid-dim\">\n      <slot name=\"dim\"></slot>\n    </div>\n    <div class=\"component-grid-main\">\n      <slot></slot>\n    </div>\n    <div class=\"component-grid-tables\">\n      <slot name=\"tables\"></slot>\n    </div>\n\n    <div class=\"component-grid-children\">\n      <slot name=\"children\"></slot>\n\n      <button on:click={e => addChild('Porte')}>Nouvelle porte</button>\n      <button on:click={e => addChild('Caisson')}>Nouveau caisson</button>\n      <button on:click={e => addChild('Etagere')}>Nouvelle étagère</button>\n      <button on:click={e => addChild('Facade')}>Nouvelle façade</button>\n      <button on:click={e => addChild('Tiroir')}>Nouveau tiroir</button>\n      <button on:click={e => addChild('Ensemble')}>Nouveau sous-ensemble</button>\n\n      {#if data.children && data.children.length}\n      <ul>\n      {#each data.children as child, i}\n        {#if child.type}\n        <li>\n          <a href=\"#/component/{path}-{child.id}\">{child.type} {child.name}</a>\n          <a href=\"@\" on:click|preventDefault={e => renameChild(i)}>✎</a>\n          <a href=\"@\" on:click|preventDefault={e => deleteChild(i)}>🗑</a>\n        </li>\n        {/if}\n      {/each}\n      </ul>\n      {/if}\n    </div>\n  </div>\n  <!--\n  <details>\n    <summary>data</summary>\n    <pre>JSON.stringify(data, null, 2)</pre>\n  </details>\n  -->\n</div>\n\n\n{#if data.children && data.children.length}\n{#each data.children as child, i}\n  <svelte:component\n    this={components[child.type]}\n    initdata={child}\n    on:datachange={e => onDataChange(e, i)}\n    path=\"{path}-{child.id}\" />\n{/each}\n{/if}\n","<script>\n  import { cleanObject } from './utils.js';\n  import InputNumber from './controls/InputNumber.svelte';\n  import InputCheckbox from './controls/InputCheckbox.svelte';\n  import Group from './pieces/Group.js';\n\n  export let children = []\n  export let childrenState = []\n  export let pieces = []\n  export let pieces_drawings = []\n  export let childrenPos\n  export let defaultChildrenPos = []\n  export let drawings = false\n\n  //*\n  $: console.log('ChildrenPositions children = ', children)\n  $: console.log('ChildrenPositions childrenState = ', childrenState)\n  $: console.log('ChildrenPositions pieces = ', pieces)\n  $: console.log('ChildrenPositions pieces_drawings = ', pieces_drawings)\n  $: console.log('ChildrenPositions childrenPos = ', JSON.stringify(childrenPos, null, 2))\n  $: console.log('ChildrenPositions defaultChildrenPos = ', defaultChildrenPos)\n  $: console.log('ChildrenPositions drawings = ', drawings)\n  //*/\n\n  $: childrenPos = resizeChildrenPos(children)\n\n  function resizeChildrenPos(children) {\n    console.log(\"resize childrenPos\")\n    return children.map((_,i) => cleanObject(childrenPos[i] || {}))\n  }\n\n  $: pieces = children\n    .map((c, i) => {\n      const state = childrenState[i] || {}\n      return state.pieces_group || new Group(state.pieces || [], `${c.type} ${c.name}`, c.type)\n    })\n    .map((g, i) => {\n      let {x, y, z} = {\n        x: 0, y: 0, z: 0,\n        ...(defaultChildrenPos[i] || {}),\n        ...cleanObject(childrenPos[i] || {}),\n      }\n      return g.position(x, y, z)\n    })\n\n  $: pieces_drawings = pieces\n    .reduce((res, p, i) => {\n      let pos = {\n        d: 1,\n        show: true,\n        ...(defaultChildrenPos[i] || {}),\n        ...cleanObject(childrenPos[i] || {})\n      }\n      let d = pos.d || 1;\n      if(pos.show) res[d-1] = [...(res[d-1] || []), p];\n      return res;\n    }, [])\n\n</script>\n\n{#if children.length > 0 }\n<table>\n  <tr>\n    <th style=\"text-align: left\">Éléments</th>\n    <th style=\"text-align: right\">dimensions (L&nbsp;x&nbsp;h&nbsp;x&nbsp;p)</th>\n    {#if drawings}\n    <th style=\"text-align: right\" colspan=\"2\">n° dessin</th>\n    {/if}\n    <th style=\"text-align: right\">de la gauche</th>\n    <th style=\"text-align: right\">du bas</th>\n    <th style=\"text-align: right\">du mur</th>\n    <td></td>\n  </tr>\n{#each children as child, i}\n  {#if child.type}\n  <tr>\n    <td>{child.type} {child.name}</td>\n    <td style=\"text-align: right\">{(pieces[i]||{}).largeur}x{(pieces[i]||{}).hauteur}x{(pieces[i]||{}).profondeur}</td>\n    {#if drawings}\n    <td><InputCheckbox tristate={false} bind:checked={childrenPos[i].show} /></td>\n    <td><InputNumber bind:value={childrenPos[i].d} def={(defaultChildrenPos[i]||{}).d || 1} min={1} /></td>\n    {/if}\n    <td><InputNumber bind:value={childrenPos[i].x} def={(defaultChildrenPos[i]||{}).x || 0} /></td>\n    <td><InputNumber bind:value={childrenPos[i].y} def={(defaultChildrenPos[i]||{}).y || 0} /></td>\n    <td><InputNumber bind:value={childrenPos[i].z} def={(defaultChildrenPos[i]||{}).z || 0} /></td>\n    <td>mm</td>\n  </tr>\n  {/if}\n{/each}\n</table>\n{/if}\n\n","export function calculEstimations(settings, pieceg) {\n  let constants = {}\n  let components = pieceg.flat_groups('', false)\n    .map(group => calculShallowGroupEstimations(settings, group, constants))\n  let total = components.reduce((tot, poste) => tot + poste.total, 0)\n  return {components, total}\n}\n\nexport function calculShallowGroupEstimations(settings, group, constants) {\n  let type = group.component_type\n  let postes = (settings.postes_estimations || [])\n    .filter(estim => estim.components[type])\n    .map(estim => ({\n      ...estim,\n      type,\n      ...calculEstimation(estim, group, constants, type),\n    }))\n    .map(estim => ({\n      computed: estim.value * estim.base_value,\n      ...estim\n    }))\n    .filter(estim => estim.computed != 0)\n  let total = postes.reduce((tot, poste) => tot + poste.computed, 0)\n  return {type, name: group.name, postes, total}\n}\n\nexport function calculEstimation(estim, pieceg, constants, type){\n  switch(estim.indice) {\n    case 'm2_ep0_20':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.epaisseur <= 20)\n          .reduce((s,p) => s + p.surface(), 0),\n        base_unit: \"m²\",\n      }\n    case 'm2_ep20_plus':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.epaisseur > 20)\n          .reduce((s,p) => s + p.surface(), 0),\n        base_unit: \"m²\",\n      }\n    case 'm2_panneau':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.features.includes('panneau'))\n          .reduce((s,p) => s + p.surface(), 0),\n        base_unit: \"m²\",\n      }\n    case 'm2_panneau_seul':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.features.includes('panneau-seul'))\n          .reduce((s,p) => s + p.surface(), 0),\n        base_unit: \"m²\",\n      }\n    case 'm2_panneau_tous':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.features.includes('panneau') || p.features.includes('panneau-seul'))\n          .reduce((s,p) => s + p.surface(), 0),\n        base_unit: \"m²\",\n      }\n    case 'm2_trav_mont_ncp':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.features.includes('traverse') || p.features.includes('montant'))\n          .reduce((s,p) => s + p.surface(), 0),\n        base_unit: \"m²\",\n      }\n    case 'm2_trav_mont_cp':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.features.includes('traverse-cp') || p.features.includes('montant-cp'))\n          .reduce((s,p) => s + p.surface(), 0),\n        base_unit: \"m²\",\n      }\n    case 'm2_trav_mont':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.features.includes('traverse') || p.features.includes('montant') || p.features.includes('traverse-cp') || p.features.includes('montant-cp'))\n          .reduce((s,p) => s + p.surface(), 0),\n        base_unit: \"m²\",\n      }\n    case 'm2_cote':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.features.includes('cote'))\n          .reduce((s,p) => s + p.surface(), 0),\n        base_unit: \"m²\",\n      }\n    case 'm2_plateau':\n      return {\n        base_value: pieceg.surface(),\n        base_unit: \"m²\",\n      }\n    case 'nb_ep0_20':\n      return {\n        base_value: pieceg.pieces.filter(p => p.epaisseur <= 20).length,\n        base_unit: \"pièces\",\n      }\n    case 'nb_ep20_plus':\n      return {\n        base_value: pieceg.pieces.filter(p => p.epaisseur > 20).length,\n        base_unit: \"pièces\",\n      }\n    case 'nb_panneau':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.features.includes('panneau'))\n          .length,\n        base_unit: \"panneaux\",\n      }\n    case 'nb_panneau_seul':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.features.includes('panneau-seul'))\n          .length,\n        base_unit: \"panneaux\",\n      }\n    case 'nb_panneau_tous':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.features.includes('panneau') || p.features.includes('panneau-seul'))\n          .length,\n        base_unit: \"panneaux\",\n      }\n    case 'nb_trav_mont_ncp':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.features.includes('traverse') || p.features.includes('montant'))\n          .length,\n        base_unit: \"pièces\",\n      }\n    case 'nb_trav_mont_cp':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.features.includes('traverse-cp') || p.features.includes('montant-cp'))\n          .length,\n        base_unit: \"pièces\",\n      }\n    case 'nb_trav_mont':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.features.includes('traverse') || p.features.includes('montant') || p.features.includes('traverse-cp') || p.features.includes('montant-cp'))\n          .length,\n        base_unit: \"pièces\",\n      }\n    case 'nb_cote':\n      return {\n        base_value: pieceg.pieces\n          .filter(p => p.features.includes('cote'))\n          .length,\n        base_unit: \"côté\",\n      }\n    case 'nb_plateau':\n      return {\n        base_value: pieceg.pieces.length,\n        base_unit: \"pièces\",\n      }\n    case 'tenon':\n      return {\n        base_value: pieceg.nombre_tenons,\n        base_unit: \"tenons\",\n      }\n    case 'constant':\n      let cst_key = `${type}/${estim.name}`\n      let val = constants[cst_key] ? 0 : 1\n      constants[cst_key] = true\n      return {\n        base_value: val,\n        base_unit: \"fois\",\n      }\n    case 'per_component':\n      return {\n        base_value: 1,\n        base_unit: type,\n      }\n    case 'per_ferrage_charniere':\n      return {\n        base_value: pieceg.features.includes('ferrage-charniere') ? 1 : 0,\n        base_unit: type,\n      }\n    default:\n      return {\n        base_value: 0,\n        base_unit: '',\n      }\n  }\n}\n","<script>\n  import { getContext } from 'svelte';\n  import { calculEstimations } from './estimation.js';\n\n  export let pieces;\n  export let estimations;\n  let onlyMins = false;\n\n  let settings\n  getContext('settings').subscribe(data => { settings = data })\n\n  $: estimations = calculEstimations(settings, pieces)\n\n  function temps(all_mins, onlyMins){\n    if (onlyMins) {\n      return `${all_mins.toFixed()} min`\n    } else {\n      let mins = all_mins % 60\n      let h = (all_mins-mins) / 60\n      return `${h.toFixed()} h ${mins.toFixed()} min`\n    }\n  }\n</script>\n\n<table class=\"large styled\">\n  <caption>Estimations pour {pieces.name} (afficher <label style=\"display: inline\"><input bind:checked={onlyMins} type=checkbox /> les minutes seulement</label>)</caption>\n  {#each estimations.components as estim_comp}\n    <tr>\n      <th>{estim_comp.type}</th>\n      <th colspan=3>{estim_comp.name}</th>\n      <td><em>{temps(estim_comp.total, onlyMins)}</em></td>\n    </tr>\n    {#each estim_comp.postes as estim}\n      <tr>\n        <td></td>\n        <td>{estim.name}</td>\n        <td>{estim.base_value.toFixed(4)} {estim.base_unit}</td>\n        <td>{temps(estim.value, onlyMins)} / {estim.base_unit}</td>\n        <td>{temps(estim.computed, onlyMins)}</td>\n      </tr>\n    {/each}\n  {/each}\n  <tr>\n    <th colspan=4>Total</th>\n    <td>{temps(estimations.total, onlyMins)}</td>\n  </tr>\n</table>\n","<script>\n  import { getContext } from 'svelte';\n  import { reduceToObject } from './utils.js';\n  import Group from './pieces/Group.js';\n  import Estimation from './Estimation.svelte'\n\n  export let pieces = []\n  export let merge = true\n  export let estimations\n\n  let separer = true\n  let totaux = true\n  let par_epaiss = false\n  let par_type = true\n\n  // Pièces, tableau non fusionné\n  $: pieces2 = pieces.pieces\n    .reduce((res, p) => res.concat(p.individual()), [])\n    .map((p) => (\n      (!p.piece) ? p : p.piece.update_new({\n        ...p.piece,\n        names: p.nom ? p.nom.split(' ') : p.piece.names,\n        que: quantite * (p.que || p.piece.que || 1),\n      })\n    ))\n\n  // Pièces, tableau fusionné si merge == true\n  $: pieces3 = !merge ? pieces2 :\n    Object.values(pieces2.reduce((map, p) => (map[p.signature()] = [...(map[p.signature()] || []), p], map), {}))\n    .map(family => (\n      family.reduce((a, b) => (a == null ? b : a.merge(b)), null)\n    ))\n\n\n  let cubeprice\n  let cubemargin\n  getContext('settings').subscribe(settings => {\n    cubeprice = settings.cubeprice\n    cubemargin = settings.cubemargin\n  })\n\n  $: total_cube = pieces3.map(p => p.que * p.cubage(cubemargin/100)).reduce((a, b) => (a+b), 0)\n  $: total_prix = pieces3.map(p => p.que * p.prix(cubeprice, cubemargin/100)).reduce((a, b) => (a+b), 0)\n\n  let statistics = []\n  $: statistics = calculStatistics(pieces, totaux)\n  $: statistics_epaisseurs = Object.keys(statistics\n    .reduce((h,x) => {x.epaisseurs.forEach(ep => h[ep.epaisseur] = true); return h}, {}))\n\n  function calculStatistics(total_group, totaux){\n    //console.log(\"calculStatistics!!!!\", total_group.individual().map(p => p.features))\n    return total_group\n      .flat_groups('', totaux)\n      .map(group => {\n        const pieces_par_epaisseur = group.pieces\n          .reduce((h, p) => ({...h, [p.epaisseur]: [...(h[p.epaisseur]||[]), p]}), {})\n        const stats_epaisseur = Object.keys(pieces_par_epaisseur)\n          .map((epaisseur) => ({\n            epaisseur: epaisseur,\n            nb_pieces: pieces_par_epaisseur[epaisseur].length,\n            surface: pieces_par_epaisseur[epaisseur].reduce((s,p) => s + p.surface(), 0)\n          }))\n        const {xmin, xmax, ymin, ymax, zmin, zmax} = group.bounding_box()\n        const panneaux = group.pieces\n          .filter(p => p.features.includes('panneau') || p.features.includes('panneau-seul'))\n        //console.log(group.name, JSON.stringify(group.pieces.map(p => p.features)))\n        return {\n          name:        group.name,\n          dimension_x: xmax - xmin,\n          dimension_y: ymax - ymin,\n          dimension_z: zmax - zmin,\n          nb_tenons:   group.pieces.reduce((n, p) => n + p.nombre_tenons, 0),\n          nb_pieces:   group.pieces.length,\n          surface:     group.surface(),\n          epaisseurs:  stats_epaisseur,\n          nb_panneaux: panneaux.length,\n          m2_panneaux: panneaux.reduce((s,p) => s + p.surface(), 0),\n        }\n      })\n      .filter(stat => stat.nb_pieces > 0)\n  }\n\n</script>\n\n<style>\n  input[size='5'] {\n    width: 6em;\n  }\n  input[size='3'] {\n    width: 4em;\n  }\n</style>\n\n<table class=\"large styled\">\n  <caption>Statistiques pour {pieces.name} (afficher <label style=\"display: inline\"><input bind:checked={totaux} type=checkbox /> totaux</label>, <label style=\"display: inline\"><input bind:checked={par_epaiss} type=checkbox /> par épaisseur</label>, <label style=\"display: inline\"><input bind:checked={par_type} type=checkbox /> par type</label>)</caption>\n  <tr>\n    <th rowspan={(par_epaiss||par_type) ? 2 : 1}>Ensemble</th>\n    <th rowspan={(par_epaiss||par_type) ? 2 : 1}>Dimensions</th>\n    <th rowspan={(par_epaiss||par_type) ? 2 : 1}>Nombre de pièces</th>\n    <th rowspan={(par_epaiss||par_type) ? 2 : 1}>Nombre de tenons</th>\n    <th rowspan={(par_epaiss||par_type) ? 2 : 1}>Surface des pièces</th>\n    {#if par_epaiss}\n      {#each statistics_epaisseurs as ep}\n        <th colspan=2>Pièces ép={ep}</th>\n      {/each}\n    {/if}\n    {#if par_type}\n      <th colspan=2>Panneaux</th>\n    {/if}\n  </tr>\n  {#if par_epaiss || par_type}\n  <tr>\n    {#if par_epaiss}\n      {#each statistics_epaisseurs as ep}\n        <th>Nbre</th>\n        <th>m²</th>\n      {/each}\n    {/if}\n    {#if par_type}\n      <th>Nbre</th>\n      <th>m²</th>\n    {/if}\n  </tr>\n  {/if}\n  {#each statistics as stat}\n    <tr>\n      <td>{stat.name}</td>\n      <td>{stat.dimension_x} x {stat.dimension_y} x {stat.dimension_z}</td>\n      <td>{stat.nb_pieces}</td>\n      <td>{stat.nb_tenons}</td>\n      <td>{stat.surface.toFixed(6)}</td>\n      {#if par_epaiss}\n      {#each statistics_epaisseurs as ep}\n        <td>{(stat.epaisseurs.find(e => e.epaisseur == ep)||{}).nb_pieces || 0}</td>\n        <td>{((stat.epaisseurs.find(e => e.epaisseur == ep)||{}).surface || 0).toFixed(6)}</td>\n      {/each}\n      {/if}\n      {#if par_type}\n        <td>{stat.nb_panneaux}</td>\n        <td>{stat.m2_panneaux.toFixed(6)}</td>\n      {/if}\n    </tr>\n  {/each}\n</table>\n\n<hr/>\n\n<table class=\"large styled\">\n  <caption>Liste de débit</caption>\n  <tr>\n    <th>Pièce (<label style=\"display: inline\"><input bind:checked={separer} type=checkbox /> séparer</label>)</th>\n    <th>Qué</th>\n    <th>L x l x e</th>\n    <th>Arrasement</th>\n    <th>Surface (m²)</th>\n    <th>epaisseur plateau (mm)</th>\n    <th>Cubage<br/>(x<input type=number bind:value={cubemargin} size=3 min=100 step=5/>%)</th>\n    <th>Prix au m³<br/><input type=number bind:value={cubeprice} size=5 step=10/></th>\n  </tr>\n  {#each pieces3 as piece}\n  <tr>\n    <td>\n      {#if separer}\n        {#each piece.name_list as name, i}\n          {#if i != 0}<br/>{/if}\n          {name}\n        {/each}\n      {:else}\n        {piece.name}\n      {/if}\n    </td>\n    <td>{piece.que || 1}</td>\n    <td>{piece.string_dimentions()}</td>\n    <td>{piece.string_arrasement()}</td>\n    <td>{piece.largeur * piece.longueur / 1e6}</td>\n    <td>{piece.epaisseur_plateau}</td>\n    <td>{piece.que * piece.cubage(cubemargin/100).toFixed(9)}</td>\n    <td>{piece.que * piece.prix(cubeprice, cubemargin/100).toFixed(2)}</td>\n  </tr>\n  {/each}\n  <tr>\n    <td>Total</td>\n    <td></td>\n    <td></td>\n    <td></td>\n    <td></td>\n    <td></td>\n    <td>{total_cube.toFixed(9)}</td>\n    <td>{total_prix.toFixed(2)}</td>\n  </tr>\n</table>\n\n<hr/>\n\n<Estimation pieces={pieces} bind:estimations={estimations} />\n\n","<script>\n  import SVGDrawing from '../pieces/SVGDrawing.svelte';\n  import Group from '../pieces/Group.js';\n  import Component from '../Component.svelte';\n  import ChildrenPositions from '../ChildrenPositions.svelte';\n  import ListeDebit from '../ListeDebit.svelte'\n  import InputNumber from '../controls/InputNumber.svelte';\n  import InputCheckbox from '../controls/InputCheckbox.svelte';\n\n  export let name = null\n  export let path = '0'\n  export let initdata = {}\n  export let state = {}\n  let childrenState = []\n\n  let defaults = {\n    children: [],\n    childrenPos: [],\n    type: 'Ensemble',\n    id: 0,\n  }\n\n  let children = initdata.children\n  let childrenPos = initdata.childrenPos\n\n  // These two lines are causing an infinite loop (especially the childrenPos\n  // one). When the ChildrenPositions component below modifies the childrenPos\n  // property through its binding, both childrenPos and defaults are\n  // invalidated, although defaults was never modified. The solution is to hide\n  // to svelte the relationship between those two properties in a function.\n\n  //$: childrenPos = initdata.childrenPos\n  //$: children = initdata.children\n\n  $: initdataChanged(initdata)\n\n  function initdataChanged(initdata){\n    console.log(\"initdata changed\")\n    childrenPos = initdata.childrenPos\n    children = initdata.children\n  }\n\n  let data\n\n  //$: data = {\n  //  ...defaults,\n  //  name,\n  //  ...initdata,\n  //  childrenPos,\n  //  children,\n  //}\n\n  // Use updateData else svelte wrongly invalidates initdata (and others) when\n  // data is set.\n\n  $: updateData(defaults, name, initdata, childrenPos, children)\n  function updateData(defaults, name, initdata, childrenPos, children) {\n    data = {\n      ...defaults,\n      name,\n      ...initdata,\n      childrenPos,\n      children,\n    }\n  }\n\n  let pieces = []\n  let pieces_drawings = []\n\n  let zoom = 0.5;\n\n  //$: console.log(pieces_drawings)\n\n  function rename(){\n    data.name = prompt(`Renommer \"${data.name}\" en :`, data.name) || data.name\n  }\n\n</script>\n\n<Component bind:data={data} state={state} bind:children={children} bind:childrenState={childrenState} path={path} on:datachange>\n  <div slot=\"plan\">\n    <h2>{data.name} <a href=\"@\" on:click|preventDefault={rename}>✎</a></h2>\n    {#each pieces_drawings as pieces_d, i}\n      <div data-count={pieces.length}>\n        <SVGDrawing bind:zoom={zoom} pieces={pieces_d || []} name={`Dessin ${i+1}`} />\n      </div>\n    {/each}\n  </div>\n\n  <div slot=\"children\">\n    <ChildrenPositions\n      children={children}\n      childrenState={childrenState}\n      bind:childrenPos={childrenPos}\n      bind:pieces={pieces}\n      bind:pieces_drawings={pieces_drawings}\n      drawings={true} />\n  </div>\n\n  <div slot=\"tables\">\n    <ListeDebit pieces={new Group(pieces, `Ensemble ${data.name}`, 'Ensemble')} />\n  </div>\n</Component>\n\n\n","<script>\n\n  export let value = null\n  export let def = null\n  export let force = false\n  export let init = null\n\n  if(init != null && value == null) value = init\n\n  let defname = def\n  let select\n  let default_value_id =  Math.random().toString(36).substring(2) +\n                          Math.random().toString(36).substring(2) +\n                          Math.random().toString(36).substring(2)\n\n  let inner_val = (def != null && value == null) ? default_value_id : value\n  $: value = (def != null && inner_val == default_value_id) ? null : inner_val\n\n  $: findDefName(select)\n  function findDefName(select){\n    if(!select) return\n    let option = Array.from(select.options).find(op => op.value == def)\n    if(option) defname = option.textContent\n  }\n\n  $: error = force && value != null && value != def\n\n</script>\n<style>\n  select.error {\n    box-shadow: 0 0 1.5px 1px red;\n  }\n</style>\n\n<select bind:value={inner_val} bind:this={select} class:error={error}>\n  {#if def != null}\n  <option value=\"{default_value_id}\">{defname} (par défaut)</option>\n  {/if}\n  <slot></slot>\n</select>\n","<script>\n  export let dim = []\n  export let zoom = 1\n  export let suffix = ''\n  export let pos = 'top'\n  export let x = 0\n  export let y = 0\n\n  $: rotate =\n    (pos == 'left') ? 'rotate(-90)' :\n    ''\n  $: reverse =\n    (pos == 'left') ? -1 :\n    1\n  $: dim2 = dim\n    .map(x => ({\n      row: 0,\n      text: '',\n      text_suffix: suffix,\n      ...x,\n      zstart: zoom * x.start * reverse,\n      zlength: zoom * x.length * reverse\n    }))\n</script>\n\n<g transform=\"translate({x}, {y}) {rotate}\">\n{#each dim2 as d}\n<circle\n  cx=\"{d.zstart}\"              cy=\"{20*d.row + 15}\"\n  r=\"2\"\n  stroke=\"black\"\n  stroke-width=\"1\"\n  fill=\"white\" />\n<circle\n  cx=\"{d.zstart+d.zlength}\"   cy=\"{20*d.row + 15}\"\n  r=\"2\"\n  stroke=\"black\"\n  stroke-width=\"1\"\n  fill=\"white\" />\n<text\n  x=\"{d.zstart+d.zlength/2}\"  y=\"{20*d.row + 13}\"\n  text-anchor=\"middle\"\n  font-size=\"10pt\"\n  >{d.text}{d.length}{d.text_suffix}</text>\n<line\n  x1=\"{d.zstart-5*reverse}\"            y1=\"{20*d.row + 15}\"\n  x2=\"{d.zstart+d.zlength+5*reverse}\" y2=\"{20*d.row + 15}\"\n  style=\"stroke-width:1;stroke:rgb(0,0,0)\"/>\n<line\n  x1=\"{d.zstart}\"              y1=\"{20*d.row + 10}\"\n  x2=\"{d.zstart}\"              y2=\"{20*d.row + 19}\"\n  style=\"stroke-width:1;stroke:rgb(0,0,0)\"/>\n<line\n  x1=\"{d.zstart+d.zlength}\"   y1=\"{20*d.row + 10}\"\n  x2=\"{d.zstart+d.zlength}\"   y2=\"{20*d.row + 19}\"\n  style=\"stroke-width:1;stroke:rgb(0,0,0)\"/>\n{/each}\n</g>\n","import { get_position, get_orient } from './utils.js';\nimport { reduceToObject } from '../utils.js';\n\nexport default class Piece {\n\n  constructor() {\n    this.type       = 'Piece'\n    this.longueur   = 0\n    this.largeur    = 0\n    this.epaisseur  = 0\n    this.arrasement = 0\n    this.x          = 0\n    this.y          = 0\n    this.z          = 0\n    this.orient     = 'xyz'\n    this.names      = []\n    this.que        = 1\n    this.features   = []\n  }\n\n  update(props) {\n    if (props.features && props.features.length == 1 && props.features[0] == true) {\n      console.log(\"WARNING: incorrect feature %o\", props)\n      throw new Exception()\n    }\n    return this.update_new({...this, props})\n  }\n\n  update_new(props) {\n    let res = Object.assign(Object.create(Piece.prototype), props)\n    if (res.features && res.features.length == 1 && res.features[0] == true) {\n      console.log(\"WARNING: incorrect feature %o\", res)\n      throw new Exception()\n    }\n    return res\n  }\n\n  get epaisseur_plateau() {\n    return (this.epaisseur <= 20 - 3) ? 20 :\n           (this.epaisseur <= 27 - 3) ? 27 :\n           (this.epaisseur <= 35 - 3) ? 35 :\n           this.epaisseur + 10;\n  }\n\n  get nombre_tenons(){\n    return (this.longueur_tenon1 ? 1 : 0) +\n           (this.longueur_tenon2 ? 1 : 0)\n  }\n\n  get name(){\n    return this.names.join(' ')\n  }\n\n  get name_list(){\n    return (this.names_list || [this.names]).map(n => n.join(' '))\n  }\n\n  set_name() {\n    return this.update_new({\n      ...this,\n      names: Array.from(arguments).filter(x => x),\n    })\n  }\n\n  add_name() {\n    return this.update_new({\n      ...this,\n      names: this.names.concat(Array.from(arguments).filter(x => x)),\n    })\n  }\n\n  prefix_name() {\n    return this.update_new({\n      ...this,\n      names: Array.from(arguments).filter(x => x).concat(this.names),\n    })\n  }\n\n  // add features to the piece if they do not exist yet\n  // example: group.add_features(\"traverse\", \"traverse-tenonee\")\n  add_features() {\n    return this.update_new({\n      ...this,\n      features: [...this.features, ...Array.from(arguments).filter(x => x && !this.features.includes(x))],\n    })\n  }\n\n  count_features() {\n    return Array.from(arguments,\n      feat => [feat, this.features.includes(feat) ? this.que : 0])\n      .reduce(reduceToObject(0, 1), {})\n  }\n\n  multiply_que(que){\n    return this.update_new({\n      ...this,\n      que: this.que * que\n    })\n  }\n\n  build(longueur, largeur, epaisseur) {\n    return this.update_new({\n      ...this,\n      arrasement:      longueur  || this.arrasement,\n      longueur:        longueur  || this.longueur,\n      largeur:         largeur   || this.largeur,\n      epaisseur:       epaisseur || this.epaisseur,\n    })\n  }\n\n  ajout_tenons(longueur_tenon1, longueur_tenon2) {\n    if(longueur_tenon2 === undefined) longueur_tenon2 = longueur_tenon1\n    return this.update_new({\n      ...this,\n      arrasement:      this.arrasement || this.longueur,\n      longueur:        this.longueur + longueur_tenon1 + longueur_tenon2,\n      longueur_tenon1: (this.longueur_tenon1 || 0) + longueur_tenon1,\n      longueur_tenon2: (this.longueur_tenon2 || 0) + longueur_tenon2,\n    })\n  }\n\n  usine_tenons(longueur_tenon1, longueur_tenon2) {\n    if(longueur_tenon2 === undefined) longueur_tenon2 = longueur_tenon1\n    return this.update_new({\n      ...this,\n      arrasement:      this.arrasement - longueur_tenon1 - longueur_tenon2,\n      longueur_tenon1: (this.longueur_tenon1 || 0) + longueur_tenon1,\n      longueur_tenon2: (this.longueur_tenon2 || 0) + longueur_tenon2,\n    })\n  }\n\n  //  rx  ry  rz    x   y   z     orienté comme\n  //\n  //  0   0   0     ep  la  Lo    traverse coté       la  ep  Lo    une traverse de haut/bas direction av/ar\n  //  0   0   1     la  ep  Lo    traverse bas av/ar  ep  la  Lo    une traverse de coté direction av/ar\n  //  0   1   0     Lo  la  ep    traverse de porte   Lo  ep  la    une traverse de haut/bas direction g/d\n  //  1   0   0     ep  Lo  la    montant coté        la  Lo  ep    un montant de porte\n  //\n  //  0   1   1     la  Lo  ep    montant porte       ep  Lo  la    un montant de coté\n  //  1   1   0     la  Lo  ep    montant porte       ep  Lo  la    un montant de coté\n  //  1   0   1     la  Lo  ep    montant porte       Lo  la  ep    une traverse de porte\n  //  1   1   1     Lo  la  ep    traverse de porte\n  //\n  //  rotation  x   y   z   comme\n  //            ep  la  Lo  traverse coté\n  //  x         ep  Lo  la  montant coté\n  //  y         Lo  la  ep  traverse de porte\n  //  z         la  ep  Lo  traverse horizontale av/ar\n  //  xy        la  Lo  ep  montant de porte\n  //  xz        Lo  ep  la  traverse horizontale g/d\n  //  yx        Lo  ep  la  traverse horizontale g/d\n  //  yz        la  Lo  ep  montant de porte\n  //  zx        la  Lo  ep  montant de porte\n  //  zy        Lo  ep  la  traverse horizontale g/d\n  //\n  //  orientation   x   y   z\n  //  xyz           Lo  la  ep    traverse de porte\n  //  xzy           Lo  ep  la    traverse horiz g/d\n  //  yxz           la  Lo  ep    montant de porte\n  //  yzx           ep  Lo  la    montant de coté\n  //  zxy           la  ep  Lo    traverse horiz av/ar\n  //  zyx           ep  la  Lo    traverse de coté\n  put(x, y, z, orient){\n    return this.update_new({\n      ...this,\n      'x':      x || this.x,\n      'y':      y || this.y,\n      'z':      z || this.z,\n      'orient': orient ? get_orient(orient) : this.orient,\n    })\n  }\n\n  // axis := 'x' | 'y' | 'z' | 'X' | 'Y' | 'Z'\n  // dim1 := 'longueur' | 'arrasement' | 'longueur_tenon1' | 'longueur_tenon2' | 0\n  // dim2 := 'largeur' | 0\n  // dim3 := 'epaisseur' | 0\n  // returns [translation, dimension] (negated if axis is uppercase)\n  dim(axis, dim1, dim2, dim3){\n    dim1 = dim1 == undefined ? 'longueur'  : dim1\n    dim2 = dim2 == undefined ? 'largeur'   : dim2\n    dim3 = dim3 == undefined ? 'epaisseur' : dim3\n    let sign = (axis == axis.toLowerCase()) ? 1 : -1;\n    axis = axis.toLowerCase()\n    let dims = [\n      dim1 == 0 ? 0 : this[dim1] || 0,\n      dim2 == 0 ? 0 : this[dim2] || 0,\n      dim3 == 0 ? 0 : this[dim3] || 0]\n    return [sign*this[axis], sign*dims[this.orient.indexOf(axis)]]\n  }\n\n  bounding_box(){\n    let [xmin, dx] = this.dim('x')\n    let [ymin, dy] = this.dim('y')\n    let [zmin, dz] = this.dim('z')\n    return {\n      dx, dy, dz,\n      xmin, ymin, zmin,\n      xmax: xmin + dx,\n      ymax: ymin + dy,\n      zmax: zmin + dz,\n    }\n  }\n\n  projection_polyline(pos){\n    pos = get_position(pos)\n    let [x, dx] = this.dim(pos[0])\n    let [y, dy] = this.dim(pos[1])\n    let [_1, t1x] = this.dim(pos[0], 'longueur_tenon1', 0, 0)\n    let [_2, t2x] = this.dim(pos[0], 'longueur_tenon2', 0, 0)\n    let [_3, t1y] = this.dim(pos[1], 'longueur_tenon1', 0, 0)\n    let [_4, t2y] = this.dim(pos[1], 'longueur_tenon2', 0, 0)\n    //console.log(this)\n    //console.log([pos, x, dx, y, dy])\n    //console.log([pos[0], this.orient.indexOf(pos[0]), t1x, t2x])\n    //console.log([pos[1], this.orient.indexOf(pos[1]), t1y, t2y])\n    let dx1  = Math.floor(dx/3)\n    let dx2 = dx - dx1\n    let dy1  = Math.floor(dy/3)\n    let dy2 = dy - dy1\n    return [\n      // t1y: tenon ou face du bas\n      [x+t1x,     y+t1y],\n      [x+dx1,     y+t1y],\n      [x+dx1,     y],\n      [x+dx2,     y],\n      [x+dx2,     y+t1y],\n      // t2x: tenon ou face de droite\n      [x+dx-t2x,  y+t1y],\n      [x+dx-t2x,  y+dy1],\n      [x+dx,      y+dy1],\n      [x+dx,      y+dy2],\n      [x+dx-t2x,  y+dy2],\n      // t2y: tenon ou face du haut\n      [x+dx-t2x,  y+dy-t2y],\n      [x+dx2,     y+dy-t2y],\n      [x+dx2,     y+dy],\n      [x+dx1,     y+dy],\n      [x+dx1,     y+dy-t2y],\n      // t1x: tenon ou face gauche\n      [x+t1x,     y+dy-t2y],\n      [x+t1x,     y+dy2],\n      [x,         y+dy2],\n      [x,         y+dy1],\n      [x+t1x,     y+dy1],\n      // fermeture de la figure\n      [x+t1x,     y+t1y],\n    ].map(c => [c[0], -c[1]])\n  }\n\n  string_arrasement(){\n    if (this.arrasement && this.arrasement != this.longueur) {\n      return this.arrasement\n    } else {\n      return ''\n    }\n  }\n\n  string_dimentions(){\n    return `${this.longueur} x ${this.largeur} x ${this.epaisseur}`\n  }\n\n  string_dimentions_plateau(){\n    return `${this.longueur} x ${this.largeur} x ${this.epaisseur_plateau}`\n  }\n\n  surface(){\n    return this.longueur * this.largeur * 1e-6\n  }\n\n  cubage(factor) {\n    return this.longueur * this.largeur * this.epaisseur_plateau * 1e-9 * (factor || 1)\n  }\n\n  prix(prix_cube, factor) {\n    return this.cubage(factor) * prix_cube\n  }\n\n  individual(){\n    return [this]\n  }\n\n  signature() {\n    return JSON.stringify(\n      Object.keys(this)\n        .sort()\n        .filter(k => (! ['names', 'names_list', 'x', 'y', 'z', 'orient', 'que'].includes(k)))\n        .map(k => [k, this[k]])\n        .reduce((a, b) => a.concat(b), []))\n  }\n\n  merge(other){\n    console.assert(this.signature() == other.signature())\n    return this.update_new({\n      ...this,\n      que:   (this.que || 1) + (other.que || 1),\n      names_list: [...(this.names_list||[this.names]), other.names],\n      names: this.names\n        .filter((n) => other.names.includes(n))\n        .concat(this.names.filter((n) => !other.names.includes(n) && !other.names.includes(`(${n})`)).map(x => x[0] == '(' ? x : `(${x})`))\n        .concat(other.names.filter((n) => !this.names.includes(n) && !this.names.includes(`(${n})`)).map(x => x[0] == '(' ? x : `(${x})`))\n    })\n  }\n}\n","<script>\n  import { onMount } from 'svelte';\n  import { cleanObject, pipeline } from '../utils.js';\n  import InputNumber from '../controls/InputNumber.svelte';\n  import InputCheckbox from '../controls/InputCheckbox.svelte';\n  import InputSelect from '../controls/InputSelect.svelte';\n  import Component from '../Component.svelte';\n  import Cote from '../draw/Cote.svelte';\n  import Piece from '../pieces/piece.js';\n  import Group from '../pieces/Group.js';\n  import SVGPiece from '../pieces/SVGPiece.svelte';\n  import SVGDrawing from '../pieces/SVGDrawing.svelte';\n  import ListeDebit from '../ListeDebit.svelte'\n\n  export let path\n  export let initdata = {}\n\n  let data = {...initdata}\n\n  let defaults = {\n    quantite: 1,\n    type:  'contre-profil',\n    largeur: 400,\n    hauteur: 600,\n    epaisseur: 18,\n    largeur_montants: 70,\n    largeur_traverses: 70,\n    profondeur_tenons: 30,\n    profondeur_rainure: 10,\n    profondeur_profil: 15,\n    encastree: false,\n    jeu_encastrement: 2,\n    jeu_rainure: 1,\n    epaisseur_panneau: 15,\n    inclure_panneau: true,\n    ferrage: 'charnieres',\n    ...initdata.defaults\n  }\n\n  let opt = { ...initdata.opt }\n  let ui  = { ...(initdata.ui || initdata.opt) }\n\n  $: opt = pipeline(\n    {\n      ...defaults,\n      ...cleanObject(ui)\n    },\n    opt => ({\n      largeur_traverse_h: opt.largeur_traverses,\n      largeur_traverse_b: opt.largeur_traverses,\n      ...opt\n    }))\n\n  $: data.opt = opt\n  $: data.ui  = ui\n  let state = {}\n\n  let zoom = 0.25\n\n  $: jeu_encastrement = opt.encastree ? opt.jeu_encastrement : 0\n\n  $: montant = new Piece()\n    .add_name(\"Montant\")\n    .add_features(opt.type == 'contre-profil' ? 'montant-cp' : 'montant')\n    .build(opt.hauteur - 2*jeu_encastrement, opt.largeur_montants, opt.epaisseur)\n  $: montant_g = montant\n    .add_name(\"gauche\")\n    .put(jeu_encastrement, jeu_encastrement, 0, 'yxz')\n  $: montant_d = montant\n    .add_name(\"droit\")\n    .put(jeu_encastrement + opt.largeur - opt.largeur_montants, jeu_encastrement, 0, 'yxz')\n\n  $: traverse =\n    (opt.type == 'contre-profil')  ? new Piece()\n      .add_name(\"Traverse\")\n      .add_features('traverse-cp')\n      .build(\n        opt.largeur - 2 * (opt.largeur_montants - opt.profondeur_profil) - 2*jeu_encastrement,\n        0,\n        opt.epaisseur):\n    (opt.type == 'tenon-mortaise') ? new Piece()\n      .add_name(\"Traverse\")\n      .add_features('traverse')\n      .build(\n        opt.largeur - 2 * opt.largeur_montants - 2*jeu_encastrement,\n        0,\n        opt.epaisseur)\n      .ajout_tenons(opt.profondeur_tenons):\n    new Piece();\n  $: traverse_xpos =\n    (opt.type == 'contre-profil')  ? opt.largeur_montants - opt.profondeur_profil:\n    (opt.type == 'tenon-mortaise') ? opt.largeur_montants - opt.profondeur_tenons:\n    0;\n  $: traverse_h = traverse\n    .add_name(\"haut\")\n    .build(null, opt.largeur_traverse_h)\n    .put(jeu_encastrement + traverse_xpos, jeu_encastrement + opt.hauteur-opt.largeur_traverse_h, 0, 'xyz')\n  $: traverse_b = traverse\n    .add_name(\"bas\")\n    .build(null, opt.largeur_traverse_b)\n    .put(jeu_encastrement + traverse_xpos, jeu_encastrement, 0, 'xyz')\n  $: panneau = (\n    (opt.type == 'contre-profil')  ? new Piece()\n      .build(\n        opt.largeur - 2 * (opt.largeur_montants - opt.profondeur_rainure + opt.jeu_rainure) - 2*jeu_encastrement,\n        opt.hauteur + 2 * (opt.profondeur_rainure - opt.jeu_rainure)\n          - opt.largeur_traverse_h - opt.largeur_traverse_b\n          - 2*jeu_encastrement,\n        opt.epaisseur_panneau):\n    (opt.type == 'tenon-mortaise') ? new Piece()\n      .build(\n        opt.largeur - 2 * (opt.largeur_montants - opt.profondeur_rainure + opt.jeu_rainure),\n        opt.hauteur + 2 * (opt.profondeur_rainure - opt.jeu_rainure)\n          - opt.largeur_traverse_h - opt.largeur_traverse_b,\n        opt.epaisseur_panneau):\n    new Piece())\n    .add_name(\"Panneau\")\n    .add_features('panneau')\n    .put(\n      jeu_encastrement + montant.largeur - opt.profondeur_rainure + opt.jeu_rainure,\n      jeu_encastrement + traverse_b.largeur - opt.profondeur_rainure + opt.jeu_rainure,\n      0,\n      'xyz')\n\n  $: pieces = [\n    opt.inclure_panneau ? panneau : null,\n    traverse_h, traverse_b,\n    montant_g, montant_d,\n  ].filter(x => x != null).map(p => p.multiply_que(opt.quantite))\n\n  $: state.pieces_group = new Group(pieces, `Porte ${data.name}`, 'Porte')\n    .add_features(`ferrage-${opt.ferrage}`)\n\n</script>\n\n<style>\n  form > * {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    max-width: 30em;\n  }\n  form > * > *:first-child {\n    flex-grow: 1;\n  }\n  hr.clear {\n    clear: both;\n    border: none;\n  }\n  table {\n    clear: both;\n  }\n</style>\n\n<Component bind:data={data} state={state} path={path} on:datachange>\n  <div slot=\"plan\">\n    <SVGDrawing pieces={pieces} name={`Porte ${data.name}`} />\n\n    <!--<img src=\"porte.svg\" />-->\n    <p>Zoom : <input type=range bind:value={zoom} min=0 max=1 step=.05> {zoom*100} %</p>\n    <svg\n        width=\"{zoom*opt.largeur + 25}\"\n        height=\"{zoom*opt.hauteur + 65}\">\n      <Cote zoom={zoom} x=20 y=0 dim={[\n          {\n            text: \"largeur: \",\n            start: 0,\n            length: opt.largeur,\n            row: 2,\n          },\n          {\n            text: \"lon. traverse: \",\n            start: traverse_h.x,\n            length: traverse_h.longueur,\n            row: 1,\n          },\n          {\n            start: montant_g.x,\n            length: montant_g.largeur,\n            row: 0,\n          },\n          {\n            start: montant_d.x,\n            length: montant_d.largeur,\n            row: 0,\n          }\n        ]} />\n      <Cote zoom={zoom} x=0 y=60 pos=left dim={[\n          {\n            text: \"hauteur: \",\n            start: 0,\n            length: opt.hauteur,\n            row: 0,\n          }\n        ]} />\n      <g transform=\"translate(20, {60 + zoom*opt.hauteur}) scale({zoom} {zoom})\">\n        {#each pieces as piece}\n          <SVGPiece piece={piece} pos=\"avant\" />\n        {/each}\n      </g>\n    </svg>\n  </div>\n\n  <div class=\"main\" slot=\"dim\">\n    <form>\n    <!-- buggy\n    <label><span>Quantité : </span><InputNumber min=1 bind:value={ui.quantite} def={defaults.quantite}/></label>\n    -->\n    <label>\n      <span>Ferrage : </span>\n      <InputSelect def={defaults.ferrage} bind:value={ui.ferrage} force={defaults.force_ferrage}>\n        <option value=\"aucun\">aucun</option>\n        <option value=\"charnieres\">charnières</option>\n      </InputSelect>\n    </label>\n    <label>\n      <span>Type : </span>\n      <InputSelect def={defaults.type} bind:value={ui.type}>\n        <option value=\"tenon-mortaise\">tenon et mortaise</option>\n        <option value=\"contre-profil\">contre profil</option>\n      </InputSelect>\n    </label>\n    <label><span>Largeur   : </span><InputNumber min=0 bind:value={ui.largeur} def={defaults.largeur} force={defaults.force_largeur}/> mm</label>\n    <label><span>Hauteur   : </span><InputNumber min=0 bind:value={ui.hauteur} def={defaults.hauteur} force={defaults.force_hauteur}/> mm</label>\n    <label><span>Épaisseur : </span><InputNumber min=0 bind:value={ui.epaisseur} def={defaults.epaisseur} force={defaults.force_epaisseur}/> mm</label>\n    <hr/>\n    <label><span>Largeur montants : </span><InputNumber min=0 bind:value={ui.largeur_montants} def={defaults.largeur_montants}/> mm</label>\n    <label><span>largeur traverses : </span><InputNumber min=0 bind:value={ui.largeur_traverses} def={defaults.largeur_traverses}/> mm</label>\n    <label><span>largeur traverse haut : </span><InputNumber min=0 bind:value={ui.largeur_traverse_h} def={opt.largeur_traverses}/> mm</label>\n    <label><span>largeur traverse bas : </span><InputNumber min=0 bind:value={ui.largeur_traverse_b} def={opt.largeur_traverses}/> mm</label>\n    <hr/>\n    <label><span>Épaisseur panneau : </span><InputNumber min=0 bind:value={ui.epaisseur_panneau} def={defaults.epaisseur_panneau}/> mm</label>\n    <label><span>Profondeur rainures : </span><InputNumber min=0 bind:value={ui.profondeur_rainure} def={defaults.profondeur_rainure}/> mm</label>\n    <label><span>Jeu paneau / rainure : </span><InputNumber min=0 bind:value={ui.jeu_rainure} def={defaults.jeu_rainure}/> mm</label>\n    {#if opt.type == 'tenon-mortaise' }\n    <label><span>Profondeur tenons : </span><InputNumber min=0 bind:value={ui.profondeur_tenons} def={defaults.profondeur_tenons}/> mm</label>\n    {:else if opt.type == 'contre-profil' }\n    <label><span>Profondeur profil : </span><InputNumber min=0 bind:value={ui.profondeur_profil} def={defaults.profondeur_profil}/> mm</label>\n    {/if}\n    <label><span>Inclure le paneau</span><InputCheckbox bind:checked={ui.inclure_panneau} def={defaults.inclure_panneau} /></label>\n    <hr/>\n    <label><span>Encastrée</span><InputCheckbox bind:checked={ui.encastree} def={defaults.encastree} /></label>\n    <label><span>jeu encastrement (tout autour) : </span><InputNumber min=0 bind:value={ui.jeu_encastrement} def={defaults.jeu_encastrement}/> mm</label>\n    </form>\n    <pre>defaults = {JSON.stringify(defaults, null, 2)}</pre>\n    <pre>ui = {JSON.stringify(ui, null, 2)}</pre>\n  </div>\n\n  <div slot=\"tables\">\n    <ListeDebit pieces={state.pieces_group} />\n  </div>\n</Component>\n","<script>\n  import { cleanObject, pipeline, nextId } from '../utils.js';\n  import Component from '../Component.svelte';\n  import ChildrenPositions from '../ChildrenPositions.svelte';\n  import Piece from '../pieces/piece.js';\n  import Group from '../pieces/Group.js';\n  import SVGDrawing from '../pieces/SVGDrawing.svelte';\n  import ListeDebit from '../ListeDebit.svelte'\n  import InputCheckbox from '../controls/InputCheckbox.svelte';\n  import InputNumber from '../controls/InputNumber.svelte';\n  import InputSelect from '../controls/InputSelect.svelte';\n\n  export let path\n  export let initdata = {}\n\n  let data = {...initdata}\n\n  //\n  // Defaults\n  //\n\n  let defaults = {\n    type:  'contre-profil',\n    largeur: 400,\n    hauteur: 600,\n    profondeur: 300,\n    epaisseur_montants: 24,\n    largeur_montants: 50,\n    largeur_traverses: 50,\n    profondeur_tenons_cotes: 30,\n    profondeur_tenons: 20,\n    profondeur_rainure: 10,\n    jeu_rainure: 1,\n    epaisseur_panneau: 16,\n    panneau_dessus: true,\n    panneau_dessous: true,\n    montants_inter_longueur_tenon: 20,\n    montants: [\n      {\n      },\n      {\n      },\n    ],\n    colonnes: [\n      {\n        porte: {},\n        casiers: [\n          {\n            tiroir: false,\n            panneau_dessous: true,\n            panneau_dos: true,\n          },\n        ],\n      },\n    ],\n    ...initdata.defaults\n  }\n\n  //\n  // Internal state (recomputed)\n  //\n\n  let state = {}\n\n  let childrenState = []\n\n  //\n  // Option (internal state, saved)\n  //\n\n  let opt = { ...defaults, ...initdata.opt }\n\n  // Migrate\n  if (opt.profondeur_tenons_intermediaire) {\n    opt.profondeur_tenons_cotes = opt.profondeur_tenons\n    opt.profondeur_tenons = opt.profondeur_tenons_intermediaire\n    delete opt.profondeur_tenons_intermediaire\n  }\n  if (opt.hauteur_traverses) {\n    opt.largeur_traverses = opt.hauteur_traverse\n    delete opt.hauteur_traverses\n  }\n\n  //\n  // UI (visible state)\n  //\n\n  let ui  = {\n    ...(initdata.ui || initdata.opt),\n  }\n\n  let num_colonnes = Math.max(opt.colonnes.length, 1)\n\n  let largeur_colonnes = opt.colonnes.map(c => (c.largeur_definie ? c.largeur : null))\n  $: largeur_colonnes = Array.from(Array(num_colonnes).keys())\n    .map(i => largeur_colonnes[i] || null)\n\n  let num_casiers_colonnes = opt.colonnes.map(c => (c.casiers || [{}]).length)\n  $: num_casiers_colonnes = Array.from(Array(num_colonnes).keys())\n    .map(i => num_casiers_colonnes[i] || 1)\n\n  let hauteur_casiers_colonnes = opt.colonnes.map(c => (c.casiers || []).map(cas => cas.hauteur_definie ? cas.hauteur : null))\n  $: hauteur_casiers_colonnes = Array.from(Array(num_colonnes).keys())\n    .map(i => (hauteur_casiers_colonnes[i] || []).slice(0, num_casiers_colonnes[i]))\n\n  let ui_colonnes = opt.colonnes\n  $: ui_colonnes = Array.from(Array(num_colonnes).keys())\n    .map(i => (ui_colonnes[i] || {}))\n    .map((colonne, i) => {\n      return {\n        ...colonne,\n        porte: {\n          ...colonne.porte,\n        },\n        casiers: Array.from(Array(num_casiers_colonnes[i]).keys())\n          .map(j => ({\n            porte: {},\n            ...(colonne.casiers || [])[j],\n          }))\n      }\n    })\n\n  let ui_montants = opt.montants\n  $: ui_montants = pipeline(\n      ui_montants.slice(0, ui_montants.length - 1),\n      m => Array(num_colonnes).fill(1).map((_, i) => m[i] || {panneaux_actifs:[]}),\n      m => m.concat([ui_montants[ui_montants.length-1]]))\n    .map(montant => ({...montant, panneaux_actifs: [...(montant.panneaux_actifs||[])]}))\n\n  let selection_casier_input = '0,0'\n  $: [selection_casier_i, selection_casier_j] = selection_casier_input.split(',').map(n => parseInt(n))\n  $: selection_casier = { i: selection_casier_i, j: selection_casier_j, key: selection_casier_input}\n\n  //\n  // Update opt from ui\n  //\n\n  $: opt = pipeline(\n    {\n      ...defaults,\n      ...cleanObject({\n        ...ui,\n      }),\n    },\n    opt => updateSubdivisions(num_colonnes, opt),\n    opt => calculLargeurColonnes(largeur_colonnes, opt),\n    opt => calculColonnesCasiers(num_casiers_colonnes, hauteur_casiers_colonnes, ui_colonnes, opt),\n    opt => calculSubdivisionMontants(opt, ui_montants))\n\n  //\n  // Update children then data from opt\n  //\n\n  let childrenPos = {}\n  let children = data.children\n  $: children = calculEnfants(opt, children)\n\n  /*\n  $: console.log('Caisson.initdata = ', initdata)\n  $: console.log('Caisson.opt = ', opt)\n  $: console.log('Caisson.ui = ', ui)\n  $: console.log('Caisson.children = ', children)\n  $: console.log('Caisson.childrenPos = ', childrenPos)\n  $: console.log('Caisson.state = ', state)\n  */\n\n  $: data = {\n    ...initdata,\n    opt,\n    ui,\n    children,\n    childrenPos,\n  }\n\n  //\n  // Fonctions de calcul\n  //\n\n  function updateSubdivisions(num_colonnes, opt){\n    let opt2 = {...opt}\n    opt2.colonnes            = opt.colonnes.slice(0, num_colonnes)\n    opt2.montants            = pipeline(\n      opt.montants.slice(0, opt.montants.length-1),\n      m => Array(num_colonnes).fill(1).map((_, i) => m[i]),\n      m => m.concat([opt.montants[opt.montants.length-1]]))\n\n    for(let i = 0; i<=num_colonnes; i++) {\n      opt2.montants[i] = {\n        ...opt2.montants[i],\n      }\n      if (i >= num_colonnes) break;\n\n      opt2.colonnes[i] = {\n        largeur: null,\n        num_casiers: 1,\n        casiers: [\n          {\n            tiroir: false,\n            panneau_dessous: true,\n            panneau_dos: true,\n          }\n        ],\n        porte: {},\n        ...opt2.colonnes[i],\n      }\n    }\n    return opt2\n  }\n\n\n  function calculLargeurColonnes(largeurs, opt){\n    let cols = opt.colonnes.length\n    let espace_a_repartir = opt.largeur - (cols+1) * opt.epaisseur_montants\n    let largeurs_definies = largeurs.filter(x => (x && x != 0))\n    let cols_a_calculer = largeurs.length - largeurs_definies.length\n    let espace_reparti = largeurs_definies.reduce((a,b) => (a+b), 0)\n    let espace_restant = espace_a_repartir - espace_reparti\n    let espace_par_col = Math.floor(espace_restant / cols_a_calculer)\n    let colonnes = [...opt.colonnes]\n\n    for(let i = 0; i < cols; i++) {\n      if(largeurs[i] && largeurs[i] != 0) {\n        colonnes[i].largeur_definie = true\n        colonnes[i].largeur = largeurs[i]\n      } else if(cols_a_calculer == 1) {\n        colonnes[i].largeur_definie = false\n        colonnes[i].largeur = espace_restant\n        cols_a_calculer = 0\n        espace_restant = 0\n      } else {\n        colonnes[i].largeur_definie = false\n        colonnes[i].largeur = espace_par_col\n        espace_restant -= espace_par_col\n        cols_a_calculer -= 1\n      }\n    }\n\n    return {\n      ...opt,\n      colonnes: colonnes,\n    }\n  }\n\n  function calculColonnesCasiers(num_casiers_colonnes, hauteur_casiers_colonnes, ui_colonnes, opt){\n    let cols = opt.colonnes.length\n    let colonnes = []\n\n    for(let i = 0; i < cols; i++) {\n      let num = num_casiers_colonnes[i]\n      let ui_colonne = ui_colonnes[i]\n      let xpos = opt.epaisseur_montants * (i+1)\n        + opt.colonnes.slice(0, i).reduce((n, c) => n + c.largeur, 0)\n      colonnes[i] = pipeline(\n        opt.colonnes[i] || {},\n        col => ({\n          ...col,\n          xpos: xpos,\n          porte: {\n            ...col.porte,\n            ...ui_colonne.porte,\n          },\n        }),\n        col => {col.casiers = (col.casiers || []).slice(0, num); return col},\n        col => calculCasiers(i, col, hauteur_casiers_colonnes[i], num, ui_colonne),\n        col => ({...col, casiers: calculPositionCasiers(col.casiers, xpos)}))\n    }\n\n    return {\n      ...opt,\n      colonnes: colonnes,\n    }\n  }\n\n  function calculCasiers(i, colonne, hauteurs, num, ui_colonne){\n    let espace_a_repartir = opt.hauteur - (num+1) * opt.epaisseur_montants\n    let hauteurs_definies = hauteurs.filter(x => (x && x != 0))\n    let casiers_a_calculer = num - hauteurs_definies.length\n    let espace_reparti = hauteurs_definies.reduce((a,b) => (a+b), 0)\n    let espace_restant = espace_a_repartir - espace_reparti\n    let espace_par_casier = Math.floor(espace_restant / casiers_a_calculer)\n\n    for(let j = 0; j < num; j++) {\n      let ui_casier = ui_colonne.casiers[j]\n      //console.log(`fusion casier ${i+1},${j+1}`, colonne.casiers[j], ui_casier)\n      let casier = {\n        hauteur: null,\n        panneau_dessous: true,\n        panneau_dos: true,\n        tiroir: false,\n        num_etageres: 0,\n        ...colonne.casiers[j],\n        ...cleanObject(ui_casier),\n        porte: {\n          double: false,\n          facade: false,\n          type: \"\",\n          ...(colonne.casiers[j] || {}).porte,\n          ...cleanObject(ui_casier.porte || {}),\n        },\n      }\n      //console.log(`fusion casier ${i+1},${j+1} = `, casier)\n      if(hauteurs[j] && hauteurs[j] != 0) {\n        casier.hauteur_definie = true\n        casier.hauteur = hauteurs[j]\n      } else if(casiers_a_calculer == 1) {\n        casier.hauteur_definie = false\n        casier.hauteur = espace_restant\n        casiers_a_calculer = 0\n        espace_restant = 0\n      } else {\n        casier.hauteur_definie = false\n        casier.hauteur = espace_par_casier\n        espace_restant -= espace_par_casier\n        casiers_a_calculer -= 1\n      }\n      colonne.casiers[j] = casier\n    }\n\n    return colonne\n  }\n\n  function calculPositionCasiers(casiers, xpos){\n    for(let j = 0; j < casiers.length; j++) {\n      const jj = casiers.length - j - 1\n      casiers[j].xpos = xpos\n      casiers[j].ypos = opt.epaisseur_montants * (jj + 1)\n        + casiers.slice(j+1).reduce((n,c) => n + c.hauteur, 0)\n    }\n    return casiers\n  }\n\n  function calculSubdivisionMontants(opt, ui_montants){\n    let subdivisions_montants = Array.from(Array(opt.colonnes.length + 1).keys()).map((i) => {\n      let ui_montant_panneaux_actifs = ((ui_montants[i] || {}).panneaux_actifs || [])\n      let ui_montant = {\n        ...ui_montants[i],\n        panneaux_actifs: [...((ui_montants[i] || {}).panneaux_actifs || [])]\n      }\n      let casiers_g = (opt.colonnes[i-1] || {}).casiers || []\n      let casiers_d = (opt.colonnes[i]   || {}).casiers || []\n      let hauteurs_g = casiers_g.slice(0, -1).map((casier, j) => (\n        {\n          gauche: [j, j+1],\n          [0]: casier.ypos - (casier.tiroir ? 0 : opt.epaisseur_montants),\n          'h': casier.tiroir ? opt.largeur_traverses : opt.epaisseur_montants,\n        }))\n      let hauteurs_d = casiers_d.slice(0, -1).map((casier, j) => (\n        {\n          droite: [j, j+1],\n          [0]: casier.ypos - (casier.tiroir ? 0 : opt.epaisseur_montants),\n          'h': casier.tiroir ? opt.largeur_traverses : opt.epaisseur_montants,\n        }))\n      let hauteurs = hauteurs_g.concat(hauteurs_d)\n        .sort((a,b) => (a[0] < b[0]) ? -1 : (a[0] > b[0]) ? 1 : 0)\n        .map(h => ({...h, [1]: h[0] + h.h}))\n      //console.log(`opt.montants[${i}] opt.colonnes[${i-1}] =`, opt.colonnes[i-1])\n      //console.log(`opt.montants[${i}] opt.colonnes[${i}] =`, opt.colonnes[i])\n      //console.log(`opt.montants[${i}] hauteurs_g =`, hauteurs_g)\n      //console.log(`opt.montants[${i}] hauteurs_g =`, hauteurs_g.map(h => h[0]))\n      //console.log(`opt.montants[${i}] hauteurs_d =`, hauteurs_d)\n      //console.log(`opt.montants[${i}] hauteurs_d =`, hauteurs_d.map(h => h[0]))\n      //console.log(`opt.montants[${i}] hauteurs =`, hauteurs)\n      let traverses = hauteurs\n        .reduce((hh, h1) => {\n          if (hh.length == 0) return [{\n            gauche: [0, 0],\n            droite: [0, 0],\n            ...h1\n          }]\n          let h0 = hh[hh.length-1]\n          if (h1[1] - h0[0] <= opt.largeur_traverses) {\n            hh[hh.length-1] = {\n              ...h0,\n              ...h1,\n              [1]: h1[1],\n            }\n            return hh\n          }\n          return hh.concat([{\n            gauche: [h0.gauche[1], h0.gauche[1]],\n            droite: [h0.droite[1], h0.droite[1]],\n            ...h1}\n          ])\n        }, [])\n        .map(h => ({\n          ...h,\n          y1: h[0] + (h[1] - h[0]) / 2 - opt.largeur_traverses / 2,\n          y2: h[0] + (h[1] - h[0]) / 2 + opt.largeur_traverses / 2,\n        }))\n      //console.log(`opt.montants[${i}].traverses =`, traverses)\n      let ui_panneaux_actifs = Array.from(Array(traverses.length + 1).keys())\n        .map(j => typeof(ui_montant.panneaux_actifs[j]) == 'boolean' ? ui_montant.panneaux_actifs[j] : null)\n        .reduce((arr, x) => arr.concat([\n          typeof(x) == 'boolean' ? x :\n          arr.length == 0        ? true : arr[arr.length-1]]), [])\n      let panneaux = Array.from(Array(traverses.length + 1).keys()).map(j => {\n        let first = (j == 0)\n        let last  = (j >= traverses.length)\n        let cote  = (i == 0 || i == opt.colonnes.length)\n\n        return {\n          first:  first,\n          last:   last,\n          cote:   cote,\n          y1:     first ? (opt.largeur_traverses + (cote ? 0 : opt.epaisseur_montants))\n                        : traverses[j-1].y2,\n          y2:     last  ? (opt.hauteur - opt.largeur_traverses - (cote ? 0 : opt.epaisseur_montants))\n                        : traverses[j].y1,\n          gauche: first ? 0 : traverses[j-1].gauche[1],\n          droite: first ? 0 : traverses[j-1].droite[1],\n          actif:  ui_panneaux_actifs[j],\n        }\n      })\n      return {\n        traverses: traverses,\n        panneaux: panneaux,\n      }\n    })\n\n    return {\n      ...opt,\n      montants : opt.montants.map((m, i) => (\n        {\n          ...m,\n          ...subdivisions_montants[i],\n        }\n      ))\n    }\n  }\n\n  function calculEnfants(opt, children){\n    //console.log(`Caisson(${path}) Recalcul des enfants %o`, opt)\n    children = [...(children || [])]\n\n    // Migrate old portes\n    for(let i = 0; i < children.length; i++){\n      if(!children[i].source) children[i].source = ['Porte', 'colonne', i]\n    }\n\n    // Create new, remove old\n    for(let i = 0; i < opt.colonnes.length; i++){\n      const colonne = opt.colonnes[i]\n      children = creePorteColonne(colonne, i, children)\n\n      for(let j = 0; j < colonne.casiers.length; j++) {\n        const casier = colonne.casiers[j]\n        children = creePorteCasier(colonne, i, casier, j, children)\n        children = creeTiroirCasier(colonne, i, casier, j, children)\n        children = supprimeEtageres(colonne, i, casier, j, children)\n        children = creeEtageres(colonne, i, casier, j, children)\n      }\n    }\n\n    // Update values\n    for(let i = 0; i < children.length; i++){\n      let child = {\n        name: `n°${i+1}`,\n        ...children[i],\n      }\n\n      child = configurePorteColonne(child) || child\n      child = configurePorteFacadeCasier(child) || child\n      child = configureTiroir(child, children) || child\n      child = configureEtagere(child) || child\n\n      children[i] = child\n    }\n\n    return children\n\n    function creePorteColonne(colonne, i, children){\n      const child_idx = children.findIndex(c => c.source.join('-') == `Porte-colonne-${i}`)\n      if (!colonne.porte.type) {\n        // Pas de porte\n        if (child_idx != -1) {\n          if (confirm(`Caisson ${data.name}\\nSupprimer la porte ${children[child_idx].name} ?`)) {\n            children.splice(child_idx, 1)\n          } else {\n            children[child_idx].source.push('disabled')\n          }\n        }\n        return children\n      }\n      if (child_idx != -1) return children; // Porte trouvée\n\n      children = [...children, {\n        source: ['Porte', 'colonne', i],\n        name:   prompt(\"Quel nom donner à la porte ?\", `colonne n°${i+1}`),\n        type:   'Porte',\n        id:     nextId(children),\n      }]\n\n      return children\n    }\n\n    function configurePorteColonne(child) {\n      let source = [...child.source]\n      let [i] = source.splice(2, 1)\n      if(source.join('-') != 'Porte-colonne') return child\n\n      const col = opt.colonnes[i];\n      if(!col) return child;\n\n      const total    = (col.porte.type == 'total')\n      const demi     = (col.porte.type == 'demi')\n      const encastre = (col.porte.type == 'encastre')\n\n      const epaisseur_porte = (child.opt || {}).epaisseur || (child.opt || {}).epaisseur_montants\n\n      return {\n        ...child,\n        type: 'Porte',\n        defaults: {\n          force_largeur: true,\n          force_hauteur: true,\n          encastree: encastre,\n          largeur:\n            total    ? col.largeur + 2 * opt.epaisseur_montants :\n            demi     ? col.largeur + opt.epaisseur_montants :\n            encastre ? col.largeur\n                                           : 0,\n          hauteur:\n            total    ? opt.hauteur :\n            demi     ? opt.hauteur - opt.epaisseur_montants :\n            encastre ? opt.hauteur - 2 * opt.epaisseur_montants\n                                           : 0,\n        },\n        defaultPosition: {\n          x: col.ypos\n             - (total ? opt.epaisseur_montants :\n                demi  ? opt.epaisseur_montants / 2\n                                            : 0),\n          y: opt.epaisseur_montants\n             - (total ? opt.epaisseur_montants :\n                demi  ? opt.epaisseur_montants / 2\n                                            : 0),\n          z: opt.profondeur\n             - (encastre ? epaisseur_porte : 0),\n        },\n      }\n    }\n\n    function typePorte(casier){\n      return casier.porte.facade ? 'Facade' : 'Porte'\n    }\n\n    function supprimeEtageres(colonne, i, casier, j, children){\n      const num_etageres = casier.num_etageres\n\n      for(let idx = children.length-1; idx >= 0; idx--){\n        const child = children[idx]\n        let source = [...child.source] // Etagere-col-i-cas-j-num-n\n        let [num] = source.splice(6,1)\n        if(source.join('-') != `Etagere-col-${i}-cas-${j}-num`) continue\n        if(num < num_etageres) continue\n\n        if (confirm(`Caisson ${data.name}\\nSupprimer l'étagère ${child.name} ?`)) {\n          children.splice(i, 1)\n        } else {\n          children[i].source.push('disabled')\n        }\n      }\n      return children\n    }\n\n    function creeEtageres(colonne, i, casier, j, children){\n      const num_etageres = casier.num_etageres\n      let name = null\n\n      for(let num = 0; num < num_etageres; num++){\n        const src = `Etagere-col-${i}-cas-${j}-num-${num}`\n        const child_idx = children.findIndex(c => c.source.join('-') == src)\n        if(child_idx != -1) continue\n\n        if(name == null) {\n          name = `colonne n°${i+1}, casier n°${j+1}`\n          name = prompt(`Quel nom donner aux étagères ?`, name) || name\n        }\n\n        children = [...children, {\n          source: ['Etagere', 'col', i, 'cas', j, 'num', num],\n          name:   `${name} #${num+1}`,\n          type:   'Etagere',\n          id:     nextId(children),\n        }]\n      }\n      return children\n    }\n\n    function configureEtagere(child) {\n      let source = [...child.source]\n      let [num] = source.splice(6, 1)\n      let [j] = source.splice(4, 1)\n      let [i] = source.splice(2, 1)\n      if(source.join('-') != 'Etagere-col-cas-num') return child\n\n      const col = opt.colonnes[i]; if(!col) return child;\n      const cas = col.casiers[j];  if(!cas)  return child;\n\n      const step = cas.hauteur / (cas.num_etageres + 1)\n\n      return {\n        ...child,\n        type: 'Etagere',\n        defaults: {\n          force_largeur:    true,\n          force_profondeur: true,\n          largeur:          col.largeur,\n          profondeur:       opt.profondeur,\n        },\n        defaultPosition: {\n          x: col.xpos,\n          y: cas.ypos + (num+1) * step,\n          z: 0,\n        },\n      }\n    }\n\n    function creePorteCasier(colonne, i, casier, j, children){\n      const type = typePorte(casier)\n\n      const variants =\n        (!casier.porte.type) ? [\n          ] :\n        (casier.porte.double) ? [\n          `${type}-col-${i}-cas-${j}-g`,\n          `${type}-col-${i}-cas-${j}-d`]\n        : [\n          `${type}-col-${i}-cas-${j}`]\n\n      const all_variants = [\n        `Porte-col-${i}-cas-${j}`,\n        `Porte-col-${i}-cas-${j}-g`,\n        `Porte-col-${i}-cas-${j}-d`,\n        `Facade-col-${i}-cas-${j}`,\n        `Facade-col-${i}-cas-${j}-g`,\n        `Facade-col-${i}-cas-${j}-d`,\n      ]\n\n      // Supprimer la facade si elle n'est pas du bon type\n      for(let idx = children.length-1; idx >= 0; idx--){\n        const source = children[idx].source.join('-')\n        //console.log(source, variants, all_variants)\n        console.log(source, children[idx].name)\n        if (variants.includes(source) || !all_variants.includes(source)) break\n\n        if (confirm(`Caisson ${data.name}\\nSupprimer la ${children[idx].type}\n        ${children[idx].name} ?`)) {\n          children.splice(idx, 1)\n        } else {\n          children[idx].source.push('disabled')\n        }\n      }\n\n      // pas de porte à créer\n      if(!casier.porte.type) return children\n\n      if(casier.porte.double) {\n        const child_idx_g = children.findIndex(c => c.source.join('-') == variants[0])\n        const child_idx_d = children.findIndex(c => c.source.join('-') == variants[1])\n        let namePrefix = `colonne n°${i+1}, casier n°${j+1}`\n        if (child_idx_g == -1 && child_idx_d == -1) {\n          namePrefix = prompt(`Quel nom donner aux ${type.toLowerCase()}s ?`, namePrefix) || namePrefix\n        }\n        if (child_idx_g == -1) {\n          children = [...children, {\n            source: [type, 'col', i, 'cas', j, 'g'],\n            name:   `${namePrefix} gauche`,\n            type:   type,\n            id:     nextId(children),\n          }]\n        }\n        if (child_idx_d == -1) {\n          children = [...children, {\n            source: [type, 'col', i, 'cas', j, 'd'],\n            name:   `${namePrefix} droite`,\n            type:   type,\n            id:     nextId(children),\n          }]\n        }\n      } else {\n        const child_idx = children.findIndex(c => c.source.join('-') == variants[0])\n        if (child_idx == -1) {\n          children = [...children, {\n            source: [type, 'col', i, 'cas', j],\n            name:   prompt(`Quel nom donner à la ${type.toLowerCase()} ?`, `colonne n°${i+1}, casier n°${j+1}`),\n            type:   type,\n            id:     nextId(children),\n          }]\n        }\n      }\n\n      return children;\n    }\n\n    function configurePorteFacadeCasier(child) {\n      let source = [...child.source]\n      let [side] = source.splice(5, 1)\n      let [j]    = source.splice(4, 1)\n      let [i]    = source.splice(2, 1)\n      let [type] = source.splice(0, 1)\n      if(source.join('-') != 'col-cas') return child\n      if(type != 'Porte' && type != 'Facade') return child\n      if(side && side != 'g' && side != 'd') return child\n\n      const col = opt.colonnes[i]; if(!col) return child;\n      const cas = col.casiers[j];  if(!cas) return child;\n\n      const double   = !!side\n      const total    = (cas.porte.type == 'total')\n      const demi     = (cas.porte.type == 'demi')\n      const encastre = (cas.porte.type == 'encastre')\n\n      const epaisseur_porte = (child.opt || {}).epaisseur || (child.opt || {}).epaisseur_montants\n\n      const defaults = {\n        force_ferrage: true,\n        ferrage:       cas.tiroir ? 'aucun' : 'charnieres',\n        encastree:     encastre,\n        force_largeur: true,\n        force_hauteur: true,\n\n        largeur: (1 / (double ? 2 : 1)) * (\n          total    ? col.largeur + 2 * opt.epaisseur_montants :\n          demi     ? col.largeur + opt.epaisseur_montants :\n          encastre ? col.largeur\n                                         : 0),\n        hauteur:\n          total    ? cas.hauteur + 2 * opt.epaisseur_montants :\n          demi     ? cas.hauteur + opt.epaisseur_montants :\n          encastre ? cas.hauteur\n                                         : 0,\n      }\n\n      const defaultPosition = {\n          x: cas.xpos\n             + (side == 'd' ? defaults.largeur : 0)\n             - (total ? opt.epaisseur_montants :\n                demi  ? opt.epaisseur_montants / 2\n                                            : 0),\n          y: cas.ypos\n             - (total ? opt.epaisseur_montants :\n                demi  ? opt.epaisseur_montants / 2\n                                            : 0),\n          z: opt.profondeur\n             - (encastre ? epaisseur_porte : 0),\n        }\n\n      return {\n        ...child,\n        type: type,\n        defaults,\n        defaultPosition,\n      }\n    }\n\n    function creeTiroirCasier(colonne, i, casier, j, children){\n      const child_idx = children.findIndex(c => c.source.join('-') == `Tiroir-col-${i}-cas-${j}`)\n\n      // Supprimer le tiroir si il n'existe pas\n      // Si il existe, return\n\n      if (!casier.tiroir) {\n        // Pas de tiroir\n        if (child_idx != -1 && confirm(`Supprimer le tiroir ${children[child_idx].name} ?`)) {\n          children.splice(child_idx, 1)\n        }\n        return children\n      }\n      if (child_idx != -1) return children; // Tiroir trouvé\n\n      // Créer le tiroir si il n'est pas encore créé\n\n      children = [...children, {\n        source: ['Tiroir', 'col', i, 'cas', j],\n        name:   prompt(`Quel nom donner au tiroir ?`, `colonne n°${i+1}, casier n°${j+1}`),\n        type:   'Tiroir',\n        id:     nextId(children),\n      }]\n\n      return children\n    }\n\n    function configureTiroir(child, children) {\n      let source = [...child.source]\n      let [j] = source.splice(4, 1)\n      let [i] = source.splice(2, 1)\n      if(source.join('-') != 'Tiroir-col-cas') return child\n\n      const col = opt.colonnes[i]; if(!col) return child;\n      const cas = col.casiers[j];  if(!cas) return child;\n\n      const facade = children.find(c => c.source.join('-') == `${typePorte(cas)}-col-${i}-cas-${j}`) || {}\n      const epaisseur_porte = facade ? ((facade.opt || {}).epaisseur || (facade.opt || {}).epaisseur_montants) : 0\n      const retrait = (cas.porte.type == 'encastre') ? epaisseur_porte : 0\n\n      return {\n        ...child,\n        type: 'Tiroir',\n        defaults: {\n          force_largeur: true,\n          force_hauteur: true,\n          largeur:       col.largeur,\n          hauteur:       Math.min(150, cas.hauteur),\n          profondeur:    opt.profondeur - retrait,\n        },\n        defaultPosition: {\n          x: cas.xpos,\n          y: cas.ypos,\n          z: (cas.porte.type == 'encastre') ? epaisseur_porte : 0,\n        },\n      }\n    }\n  }\n\n  //\n  // Pièces\n  //\n\n  let montant = new Piece()\n    .add_name(\"Montant\")\n    .add_features('montant')\n\n  let traverse = new Piece()\n    .add_name(\"Traverse\")\n    .add_features('traverse')\n\n  let piece_panneau = new Piece()\n    .add_name(\"Panneau\")\n    .add_features('panneau')\n\n  $: montants_template = montant\n    .build(\n      opt.hauteur,\n      opt.largeur_montants,\n      opt.epaisseur_montants)\n\n  $: montant_ar_g = montants_template\n    .add_name(\"arrière-gauche\")\n    .put(0, 0, 0, 'yzx')\n\n  $: montant_av_g = montants_template\n    .add_name(\"avant-gauche\")\n    .put(opt.largeur - montants_template.epaisseur, 0, opt.profondeur - montants_template.largeur, 'yzx')\n\n  $: montant_ar_d = montants_template\n    .add_name(\"arrière-droit\")\n    .put(opt.largeur - montants_template.epaisseur, 0, 0, 'yzx')\n\n  $: montant_av_d = montants_template\n    .add_name(\"avant-droit\")\n    .put(0, 0, opt.profondeur - montants_template.largeur, 'yzx')\n\n  $: traverses_cote = traverse\n    .build(\n      opt.profondeur - 2 * (opt.largeur_montants - opt.profondeur_tenons_cotes),\n      opt.largeur_traverses,\n      opt.epaisseur_montants)\n    .usine_tenons(opt.profondeur_tenons_cotes)\n    .put(null, null, opt.largeur_montants - opt.profondeur_tenons_cotes, 'zyx')\n\n  $: traverse_cote_h_g = traverses_cote\n    .add_name(\"haut-gauche\")\n    .put(0, 0)\n\n  $: traverse_cote_b_g = traverses_cote\n    .add_name(\"bas-gauche\")\n    .put(0, opt.hauteur - traverses_cote.largeur)\n\n  $: traverse_cote_h_d = traverses_cote\n    .add_name(\"haut-droit\")\n    .put(opt.largeur - traverses_cote.epaisseur, 0)\n\n  $: traverse_cote_b_d = traverses_cote\n    .add_name(\"bas-droit\")\n    .put(opt.largeur - traverses_cote.epaisseur, opt.hauteur - traverses_cote.largeur)\n\n  $: traverses = traverse\n    .add_name(\"principale\")\n    .build(\n      opt.largeur - 2 * (opt.epaisseur_montants - opt.profondeur_tenons),\n      opt.largeur_traverses,\n      opt.epaisseur_montants)\n    .usine_tenons(opt.profondeur_tenons)\n    .put(opt.epaisseur_montants - opt.profondeur_tenons, null, null, 'xzy')\n\n  $: traverse_ar_h = traverses\n    .add_name(\"arrière-haut\")\n    .put(null, 0, 0)\n\n  $: traverse_ar_b = traverses\n    .add_name(\"arrière-bas\")\n    .put(null, opt.hauteur - traverses.epaisseur, 0)\n\n  $: traverse_av_h = traverses\n    .add_name(\"avant-haut\")\n    .put(null, 0, opt.profondeur - traverses.largeur)\n\n  $: traverse_av_b = traverses\n    .add_name(\"avant-bas\")\n    .put(null, opt.hauteur - traverses.epaisseur, opt.profondeur - traverses.largeur)\n\n  $: panneaux_haut_bas = piece_panneau\n    .build(\n      opt.largeur - 2 * (opt.epaisseur_montants - opt.profondeur_rainure + opt.jeu_rainure),\n      opt.profondeur - 2 * (opt.largeur_traverses - opt.profondeur_rainure + opt.jeu_rainure),\n      opt.epaisseur_panneau)\n    .put(\n      opt.epaisseur_montants - opt.profondeur_rainure + opt.jeu_rainure,\n      null,\n      opt.largeur_montants - opt.profondeur_rainure + opt.jeu_rainure,\n      'xzy')\n\n  $: panneau_h = !opt.panneau_dessus ? null : panneaux_haut_bas\n    .add_name(\"haut\")\n    .put(null, 0)\n\n  $: panneau_b = !opt.panneau_dessous ? null : panneaux_haut_bas\n    .add_name(\"bas\")\n    .put(null, opt.hauteur - panneaux_haut_bas.epaisseur)\n\n  $: panneaux_dos = opt.colonnes.map((col, i) => (col.casiers.map((casier, j) =>\n    (casier.panneau_dos == false) ? null :\n    (piece_panneau\n      .add_name(\"dos\", `colonne n°${i+1}`, `casier n°${j+1}`)\n      .build(\n        casier.hauteur + 2 * (opt.profondeur_rainure - opt.jeu_rainure),\n        col.largeur + opt.epaisseur_montants - opt.largeur_montants / 2\n                    + 2 * (opt.profondeur_rainure - opt.jeu_rainure),\n        opt.epaisseur_panneau)\n      .put(\n        casier.xpos - opt.profondeur_rainure + opt.jeu_rainure,\n        casier.ypos - opt.profondeur_rainure + opt.jeu_rainure,\n        0, 'yxz')))))\n\n  $: montants_cloisons = Array.from(Array(opt.colonnes.length - 1).keys()).map((i) => (montant\n    .add_name(`cloison n°${i+1}`)\n    .build(\n      opt.hauteur - 2 * (opt.epaisseur_montants - opt.montants_inter_longueur_tenon),\n      opt.largeur_montants,\n      opt.epaisseur_montants)\n    .usine_tenons(opt.montants_inter_longueur_tenon)\n    .put(\n      opt.epaisseur_montants\n        + opt.colonnes.slice(0, i+1).map(x => x.largeur).reduce((a, b) => a+b, 0)\n        + i * opt.epaisseur_montants,\n      opt.epaisseur_montants - opt.montants_inter_longueur_tenon,\n      null,\n      'yzx')))\n\n  $: montants_cloisons_av = montants_cloisons.map((m, i) => (m\n    .add_name(\"avant\")\n    .put(null, null, opt.profondeur - m.largeur)))\n\n  $: montants_cloisons_ar = montants_cloisons.map((m, i) => (m\n    .add_name(\"arrière\")\n    .put(null, null, 0)))\n\n  $: traverses_cote_inter_caissons =\n    opt.montants.map((sub, i) => (\n      sub.traverses.map((h, j) => (traverses_cote\n        .add_name(\n          (i == 0)                  ? \"coté gauche\" :\n          (i < opt.colonnes.length) ? `cloison n°${i}` : \"coté droit\")\n        .add_name(`traverse n°${j+1}`)\n        .put(\n          opt.epaisseur_montants * (i)\n            + opt.colonnes.slice(0, i).reduce((n, c) => n+c.largeur, 0),\n          h.y1)\n      ))\n    ))\n\n  $: panneaux_cote_et_cloisons = opt.montants.map((sub, i) => (\n    sub.panneaux.map((panneau, j) => !panneau.actif ? null : (\n      piece_panneau\n      .add_name(\n        (i == 0)                   ? \"coté gauche\" :\n        (i >= opt.colonnes.length) ? \"coté droit\"  : `cloison n°${i}`,\n        `caisson n°${j+1}`)\n      .build(\n        panneau.y2 - panneau.y1 + 2 * (opt.profondeur_rainure - opt.jeu_rainure),\n        opt.profondeur - 2 * (opt.largeur_traverses - opt.profondeur_rainure + opt.jeu_rainure),\n        opt.epaisseur_panneau)\n      .put(\n        opt.epaisseur_montants * (i)\n          + opt.colonnes.slice(0, i).reduce((n, c) => n+c.largeur, 0),\n        panneau.y1 - opt.profondeur_rainure + opt.jeu_rainure,\n        opt.largeur_montants - opt.profondeur_rainure + opt.jeu_rainure,\n        'yzx')\n    ))\n  ))\n\n  $: traverses_cloisons = Array.from(Array(opt.colonnes.length - 1).keys()).map((i) => (traverse\n    .add_name(`cloison n°${i+1}`)\n    .build(\n      opt.profondeur - 2 * (opt.largeur_montants - opt.profondeur_tenons_cotes),\n      opt.largeur_traverses,\n      opt.epaisseur_montants)\n    .usine_tenons(opt.profondeur_tenons_cotes)\n    .put(\n      opt.epaisseur_montants\n        + opt.colonnes.slice(0, i+1).map(x => x.largeur).reduce((a, b) => a+b, 0)\n        + i * opt.epaisseur_montants,\n      null,\n      opt.largeur_montants - opt.profondeur_tenons_cotes,\n      'zyx') ))\n\n  $: traverses_cloisons_h = traverses_cloisons.map((t, i) => (t\n    .add_name(\"haut\")\n    .put(null, opt.epaisseur_montants)))\n\n  $: traverses_cloisons_b = traverses_cloisons.map((t, i) => (t\n    .add_name(\"bas\")\n    .put(null, opt.hauteur - opt.epaisseur_montants - t.largeur)))\n\n  $: traverses_inter2_av_ar = opt.colonnes.map((col, i) => (\n    col.casiers.map((casier, j) => (j == col.casiers.length-1) ? null : (\n      traverse\n        .add_name(\"intermédiaire\")\n        .build(col.largeur, opt.largeur_traverses, opt.epaisseur_montants)\n        .ajout_tenons(opt.profondeur_tenons)\n        .put(\n          casier.xpos - opt.profondeur_tenons,\n          casier.ypos - opt.epaisseur_montants,\n          null,\n          'xzy')\n    ))\n  ))\n\n  $: traverses_inter2_av = traverses_inter2_av_ar.map((col, i) => (\n    col.map((tr, j) => (tr == null) ? null : (tr\n      .add_name(\"avant\", `cloison n°${i+1}`, `caisson n°${j}`)\n      .put(null, null, opt.profondeur - opt.largeur_montants)\n    ))\n  ))\n\n  $: traverses_inter2_ar = traverses_inter2_av_ar.map((col, i) => (\n    col.map((tr, j) => (tr == null) ? null : (tr\n      .add_name(\"arrière\", `cloison n°${i+1}`, `caisson n°${j}`)\n      .put(null, null, 0)\n    ))\n  ))\n\n  $: panneau_inter2_dessous = opt.colonnes.map((col, i) => (\n    col.casiers.map((casier, j) =>\n      (j == col.casiers.length-1) ? null :\n      (casier.panneau_dessous === false) ? null :\n      (piece_panneau\n        .add_name(\"dessous\", `colonne n°${i+1}`, `casier n°${j+1}`)\n        .build(\n          col.largeur\n            + 2 * (opt.profondeur_rainure - opt.jeu_rainure),\n          opt.profondeur\n            - 2 * opt.largeur_traverses\n            + 2 * (opt.profondeur_rainure - opt.jeu_rainure),\n          opt.epaisseur_panneau)\n        .put(\n          casier.xpos - opt.profondeur_rainure + opt.jeu_rainure,\n          casier.ypos - opt.epaisseur_panneau,\n          opt.largeur_traverses\n            - opt.profondeur_rainure + opt.jeu_rainure,\n          'xzy')\n    ))\n  ))\n\n  let all_pieces = []\n  let child_pieces = []\n\n  $: pieces = [\n    montant_ar_g, montant_av_g, montant_ar_d, montant_av_d,\n    traverse_cote_b_d, traverse_cote_b_g, traverse_cote_h_d, traverse_cote_h_g,\n    traverse_av_h, traverse_av_b, traverse_ar_h, traverse_ar_b,\n    panneau_h, panneau_b,\n  ]\n    .concat(panneaux_dos.reduce((a,b) => a.concat(b), []))\n    .concat(panneaux_cote_et_cloisons.reduce((a,b) => a.concat(b), []))\n    .concat(montants_cloisons_ar)\n    .concat(montants_cloisons_av)\n    .concat(traverses_cloisons_h)\n    .concat(traverses_cloisons_b)\n    .concat(traverses_inter2_av.reduce((a,b) => a.concat(b), []))\n    .concat(traverses_inter2_ar.reduce((a,b) => a.concat(b), []))\n    .concat(traverses_cote_inter_caissons.reduce((a,b) => a.concat(b), []))\n    .concat(panneau_inter2_dessous.reduce((a,b) => a.concat(b), []))\n    .filter(x => x)\n\n  $: all_pieces = pieces.concat(child_pieces)\n\n  $: state.pieces = all_pieces\n</script>\n\n<style>\n  form > label {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    max-width: 30em;\n  }\n  form > label > *:first-child {\n    flex-grow: 1;\n  }\n  hr.clear {\n    clear: both;\n    border: none;\n  }\n  td {\n    vertical-align: top;\n  }\n  table.panneaux .center {\n    text-align: center\n  }\n  table.panneaux .vertical {\n    //transform: rotate(-90deg);\n    //transform-origin: left;\n    //text-orientation: mixed;\n    writing-mode: sideways-lr;\n    min-width: 1em;\n  }\n\n  .meuble {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    margin: 0.5em;\n  }\n  .meuble .colonne {\n    display: flex;\n    flex-direction: column;\n    width: 2em;\n  }\n  .meuble .colonne .casier {\n    border: 1px solid #eee;\n    text-align: center;\n  }\n  .meuble .colonne .casier input[type=radio] {\n    margin: 0.5em;\n  }\n\n  .meuble .casier.panneau-haut           { border-top: 3px solid black; }\n  .meuble .casier.panneau-bas            { border-bottom: 3px solid black; }\n  .meuble .casier.panneau-gauche-partiel { border-left: 3px dotted black; }\n  .meuble .casier.panneau-droit-partiel  { border-right: 3px dotted black; }\n  .meuble .casier.panneau-gauche         { border-left: 3px solid black; }\n  .meuble .casier.panneau-droit          { border-right: 3px solid black; }\n  .meuble .casier.panneau-dos            { background-color: #ddd; }\n\n  .prefs-casier {\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n  }\n\n  .prefs-casier > * {\n    margin: 0.5em;\n  }\n</style>\n\n<Component bind:data={data} path={path} state={state} bind:childrenState={childrenState} bind:children={children} on:datachange>\n  <div slot=\"plan\">\n    <SVGDrawing pieces={all_pieces} name={`Caisson ${data.name}`} />\n  </div>\n\n  <div class=\"main\" slot=\"dim\">\n\n    <h3>Mesures</h3>\n\n    <form>\n    <label><span>Hauteur    : </span><InputNumber min=0 bind:value={ui.hauteur} def={defaults.hauteur} /> mm </label>\n    <label><span>Largeur    : </span><InputNumber min=0 bind:value={ui.largeur} def={defaults.largeur}/> mm</label>\n    <label><span>Profondeur : </span><InputNumber min=0 bind:value={ui.profondeur} def={defaults.profondeur}/> mm </label>\n    <label><span>Colonnes   : </span><input type=number bind:value={num_colonnes} min=1/></label>\n\n    <table>\n      <tr>\n        <td></td>\n        {#each opt.colonnes as colonne, i}\n          <th>Colonne n°{i+1}</th>\n        {/each}\n      </tr>\n      <tr>\n        <td>Largeur intérieure&nbsp;:&nbsp;</td>\n        {#each opt.colonnes as colonne, i}\n        <td>\n          <input type=number min=0\n            placeholder={colonne.largeur}\n            bind:value={largeur_colonnes[i]}\n            style=\"width: 5em\" />\n        </td>\n        {/each}\n        <td>mm</td>\n      </tr>\n      <tr>\n        <td>Casiers&nbsp;:&nbsp;</td>\n        {#each opt.colonnes as colonne, i}\n        <td>\n          <input type=number min=1\n            bind:value={num_casiers_colonnes[i]}\n            style=\"width: 5em\" />\n        </td>\n        {/each}\n        <td></td>\n      </tr>\n      <tr>\n        <td>Hauteur intérieure&nbsp;:&nbsp;</td>\n        {#each opt.colonnes as colonne, i}\n        <td>\n          {#each colonne.casiers as casier, j}\n            {#if j > 0}\n            <br/>\n            {/if}\n            <input type=number min=1\n              placeholder={colonne.casiers[j].hauteur}\n              bind:value={hauteur_casiers_colonnes[i][j]}\n              style=\"width: 5em\" />\n          {/each}\n        </td>\n        {/each}\n        <td></td>\n      </tr>\n    </table>\n\n    {#if largeur_colonnes.filter(x => (x && x != 0)).length == largeur_colonnes.length}\n    <p>Attention : trop de largeurs sont définies en même temps</p>\n    {/if}\n\n    <hr/>\n\n    <div class=\"prefs-casier\">\n      <div class=\"meuble\"\n        class:panneau-haut={opt.panneau_dessus}\n        class:panneau-bas={opt.panneau_dessous}>\n        {#each opt.colonnes as colonne, i}\n        <div class=\"colonne colonne-{i}\">\n          <!--<div>Colonne n°{i}</div>-->\n          {#each colonne.casiers as casier, j}\n          <label\n            class=\"casier casier-{i}-{j}\"\n            class:panneau-haut={  j == 0 ? opt.panneau_dessus :\n                                  opt.colonnes[i].casiers[j-1].panneau_dessous}\n            class:panneau-bas={   j < ui_colonnes[i].casiers.length-1 ?\n                                  opt.colonnes[i].casiers[j].panneau_dessous :\n                                  opt.panneau_dessous}\n            class:panneau-gauche={opt.montants[i].panneaux\n                                  .map((p,k) => p.droite != j || opt.montants[i].panneaux[k].actif)\n                                  .reduce((b, p) => b && p, true)}\n            class:panneau-droit={ opt.montants[i+1].panneaux\n                                  .map((p,k) => p.gauche != j || opt.montants[i+1].panneaux[k].actif)\n                                  .reduce((b, p) => b && p, true)}\n            class:panneau-gauche-partiel={\n                                  opt.montants[i].panneaux\n                                  .map((p,k) => p.droite == j && opt.montants[i].panneaux[k].actif)\n                                  .reduce((b, p) => b || p, false)}\n            class:panneau-droit-partiel={\n                                  opt.montants[i+1].panneaux\n                                  .map((p,k) => p.gauche == j && opt.montants[i+1].panneaux[k].actif)\n                                  .reduce((b, p) => b || p, false)}\n            class:panneau-dos={opt.colonnes[i].casiers[j].panneau_dos}\n            class:tiroir={opt.colonnes[i].casiers[j].tiroir}\n            style=\"flex-grow: {casier.hauteur}\">\n            <!-- Casier n°{j} -->\n            <input type=\"radio\" name=\"selection-casier\" value={`${i},${j}`} bind:group={selection_casier_input} />\n          </label>\n          {/each}\n        </div>\n        {/each}\n      </div>\n\n      <div>\n        {#each [selection_casier] as sel (sel.key)}\n        <p><strong>Colonne n°{selection_casier_i+1}</strong></p>\n        <fieldset>\n          <legend>Porte colonne n°{selection_casier_i+1}</legend>\n          <label>\n            <span>Type :&nbsp;</span>\n            <InputSelect init={opt.colonnes[selection_casier_i].porte.type} bind:value={ui_colonnes[selection_casier_i].porte.type}>\n              <option value=\"\">Aucune</option>\n              <option value=\"total\">Recouvrement total</option>\n              <option value=\"demi\">Recouvrement à moitié</option>\n              <option value=\"encastre\">Encastré</option>\n            </InputSelect>\n          </label>\n          <label style=\"display: none\"><InputCheckbox tristate={false}\n            def={opt.colonnes[selection_casier_i].porte.double}\n            bind:checked={ui_colonnes[selection_casier_i].porte.double}\n            /> porte double</label>\n        </fieldset>\n        {/each}\n      </div>\n\n      <div>\n        {#each [selection_casier] as sel (sel.key)}\n        <p><strong>Casier n° {selection_casier_j+1}</strong></p>\n        <fieldset>\n          <legend>Porte col°{selection_casier_i+1} cas°{selection_casier_j+1}</legend>\n          <label>\n            <span>Type :&nbsp;</span>\n            <InputSelect\n              init={opt.colonnes[selection_casier_i].casiers[selection_casier_j].porte.type}\n              bind:value={ui_colonnes[selection_casier_i].casiers[selection_casier_j].porte.type}>\n              <option value=\"\">Aucune</option>\n              <option value=\"total\">Recouvrement total</option>\n              <option value=\"demi\">Recouvrement à moitié</option>\n              <option value=\"encastre\">Encastré</option>\n            </InputSelect>\n            <label><InputCheckbox tristate={false}\n              def={opt.colonnes[selection_casier_i].casiers[selection_casier_j].porte.double}\n              bind:checked={ui_colonnes[selection_casier_i].casiers[selection_casier_j].porte.double}\n              /> porte double</label>\n            <label><InputCheckbox tristate={false}\n              def={opt.colonnes[selection_casier_i].casiers[selection_casier_j].porte.facade}\n              bind:checked={ui_colonnes[selection_casier_i].casiers[selection_casier_j].porte.facade}\n              /> façade seulement</label>\n          </label>\n        </fieldset>\n        <fieldset>\n          <legend>Étagère col°{selection_casier_i+1} cas°{selection_casier_j+1}</legend>\n          <label>\n            <span>Nombre d'étagères</span>\n            <InputNumber\n              def={opt.colonnes[selection_casier_i].casiers[selection_casier_j].num_etageres}\n              bind:value={ui_colonnes[selection_casier_i].casiers[selection_casier_j].num_etageres}\n              />\n          </label>\n        </fieldset>\n        <fieldset>\n          <legend>Tiroir col°{selection_casier_i+1} cas°{selection_casier_j+1}</legend>\n          <label><InputCheckbox tristate={false}\n            def={opt.colonnes[selection_casier_i].casiers[selection_casier_j].tiroir}\n            bind:checked={ui_colonnes[selection_casier_i].casiers[selection_casier_j].tiroir}\n            /> tiroir</label>\n        </fieldset>\n        <fieldset>\n          <legend>Panneaux col°{selection_casier_i+1} cas°{selection_casier_j+1}</legend>\n          {#if selection_casier_j == 0}\n          <label><InputCheckbox tristate={false}\n            def={opt.panneau_dessus}\n            bind:checked={ui.panneau_dessus}\n            /> panneau dessus (tout le meuble)</label>\n          {:else}\n          <label><InputCheckbox tristate={false}\n            def={opt.colonnes[selection_casier_i].casiers[selection_casier_j-1].panneau_dessous}\n            bind:checked={ui_colonnes[selection_casier_i].casiers[selection_casier_j-1].panneau_dessous}\n            /> panneau dessus</label>\n          {/if}\n          <label><InputCheckbox tristate={false}\n            def={opt.colonnes[selection_casier_i].casiers[selection_casier_j].panneau_dos}\n            bind:checked={ui_colonnes[selection_casier_i].casiers[selection_casier_j].panneau_dos}\n            /> panneau dos</label>\n          {#if selection_casier_j < ui_colonnes[selection_casier_i].casiers.length-1}\n          <label><InputCheckbox tristate={false}\n            def={opt.colonnes[selection_casier_i].casiers[selection_casier_j].panneau_dessous}\n            bind:checked={ui_colonnes[selection_casier_i].casiers[selection_casier_j].panneau_dessous}\n            /> panneau dessous</label>\n          {:else}\n          <label><InputCheckbox tristate={false}\n            def={opt.panneau_dessous}\n            bind:checked={ui.panneau_dessous}\n            /> panneau dessous (tout le meuble)</label>\n          {/if}\n          {#each opt.montants[selection_casier_i].panneaux as panneau, k}\n            {#if panneau.droite == selection_casier_j}\n              <label><InputCheckbox tristate={false}\n                def={opt.montants[selection_casier_i].panneaux[k].actif}\n                bind:checked={ui_montants[selection_casier_i].panneaux_actifs[k]}\n                /> panneau gauche (n°{k+1})</label>\n            {/if}\n          {/each}\n          {#each opt.montants[selection_casier_i+1].panneaux as panneau, k}\n            {#if panneau.gauche == selection_casier_j}\n              <label><InputCheckbox tristate={false}\n                def={opt.montants[selection_casier_i+1].panneaux[k].actif}\n                bind:checked={ui_montants[selection_casier_i+1].panneaux_actifs[k]}\n                /> panneau droite (n°{k+1})</label>\n            {/if}\n          {/each}\n        </fieldset>\n        {/each}\n      </div>\n    </div>\n\n    <hr/>\n\n    <label><span>Épaisseur montants et traverses : </span><InputNumber def={opt.epaisseur_montants} bind:value={ui.epaisseur_montants} min=0/> mm</label>\n    <label><span>Largeur montants : </span><InputNumber def={opt.largeur_montants} bind:value={ui.largeur_montants} min=0/> mm</label>\n    <label><span>Largeur traverses : </span><InputNumber def={opt.largeur_traverses} bind:value={ui.largeur_traverses} min=0/> mm</label>\n    <label><span>Profondeur tenons cotés : </span><InputNumber def={opt.profondeur_tenons_cotes} bind:value={ui.profondeur_tenons_cotes} min=0/> mm</label>\n    <label><span>Profondeur tenons : </span><InputNumber def={opt.profondeur_tenons} bind:value={ui.profondeur_tenons} min=0/> mm</label>\n\n    <hr/>\n\n    <label><span>Épaisseur panneau : </span><InputNumber def={opt.epaisseur_panneau} bind:value={ui.epaisseur_panneau} min=0/> mm </label>\n    <label><span>Profondeur rainure : </span><InputNumber def={opt.profondeur_rainure} bind:value={ui.profondeur_rainure} min=0/> mm</label>\n    <label><span>Jeu panneau / rainure : </span><InputNumber def={opt.jeu_rainure} bind:value={ui.jeu_rainure} min=0/> mm</label>\n    <label><span>Longueur tenons cloisons : </span> <InputNumber def={opt.montants_inter_longueur_tenon} bind:value={ui.montants_inter_longueur_tenon} min=0/> mm</label>\n\n    </form>\n  </div>\n\n  <div slot=\"children\">\n    <ChildrenPositions\n      children={children}\n      childrenState={childrenState}\n      defaultChildrenPos={children.map(c => c.defaultPosition)}\n      bind:childrenPos={childrenPos}\n      bind:pieces={child_pieces} />\n  </div>\n\n  <div slot=\"tables\">\n    <ListeDebit pieces={new Group(all_pieces, `Caisson ${data.name}`, 'Caisson')} />\n  </div>\n</Component>\n","<script>\n  import { onMount } from 'svelte';\n  import { cleanObject } from '../utils.js';\n  import InputNumber from '../controls/InputNumber.svelte';\n  import InputCheckbox from '../controls/InputCheckbox.svelte';\n  import Component from '../Component.svelte';\n  import Cote from '../draw/Cote.svelte';\n  import Piece from '../pieces/piece.js';\n  import Group from '../pieces/Group.js';\n  import SVGPiece from '../pieces/SVGPiece.svelte';\n  import SVGDrawing from '../pieces/SVGDrawing.svelte';\n  import ListeDebit from '../ListeDebit.svelte'\n\n  export let path\n  export let initdata = {}\n\n  let data = {...initdata}\n\n  let defaults = {\n    largeur: 400,\n    profondeur: 300,\n    epaisseur: 18,\n    ...initdata.defaults\n  }\n\n  let opt = { ...initdata.opt }\n  let ui  = { ...(initdata.ui || initdata.opt) }\n  let state = {}\n\n  $: opt      = {...defaults, ...cleanObject(ui)}\n  $: data.opt = opt\n  $: data.ui  = ui\n\n  let zoom = 0.5\n\n  $: etagere = new Piece()\n    .add_name(\"Étagère\")\n    .build(opt.largeur, opt.profondeur, opt.epaisseur)\n    .put(0, 0, 0, 'xzy')\n    .add_features('panneau-seul')\n\n  $: pieces = [etagere]\n\n  $: state.pieces = pieces\n</script>\n\n<style>\n  form > * {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    max-width: 30em;\n  }\n  form > * > *:first-child {\n    flex-grow: 1;\n  }\n  hr.clear {\n    clear: both;\n    border: none;\n  }\n  table {\n    clear: both;\n  }\n</style>\n\n<Component bind:data={data} path={path} state={state} on:datachange>\n  <div slot=\"plan\">\n    <SVGDrawing pieces={pieces} name={`Étagère ${data.name}`} />\n  </div>\n\n  <div class=\"main\" slot=\"dim\">\n    <form>\n    <label><span>Largeur    : </span><InputNumber min=0 bind:value={ui.largeur} def={defaults.largeur} force={defaults.force_largeur}/> mm</label>\n    <label><span>Profondeur : </span><InputNumber min=0 bind:value={ui.profondeur} def={defaults.profondeur} force={defaults.force_profondeur}/> mm</label>\n    <label><span>Épaisseur  : </span><InputNumber min=0 bind:value={ui.epaisseur} def={defaults.epaisseur} force={defaults.force_epaisseur}/> mm</label>\n  </div>\n\n  <div slot=\"tables\">\n    <ListeDebit pieces={new Group(pieces, `Étagère ${data.name}`, 'Etagere')} />\n  </div>\n</Component>\n","<script>\n  import { onMount } from 'svelte';\n  import { cleanObject } from '../utils.js';\n  import InputNumber from '../controls/InputNumber.svelte';\n  import InputCheckbox from '../controls/InputCheckbox.svelte';\n  import Component from '../Component.svelte';\n  import Cote from '../draw/Cote.svelte';\n  import Piece from '../pieces/piece.js';\n  import Group from '../pieces/Group.js';\n  import SVGPiece from '../pieces/SVGPiece.svelte';\n  import SVGDrawing from '../pieces/SVGDrawing.svelte';\n  import ListeDebit from '../ListeDebit.svelte'\n\n  export let path\n  export let initdata = {}\n\n  let data = {...initdata}\n  let state = {}\n\n  let defaults = {\n    largeur: 400,\n    hauteur: 150,\n    epaisseur: 18,\n    ...initdata.defaults\n  }\n\n  let opt = { ...initdata.opt }\n  let ui  = { ...(initdata.ui || initdata.opt) }\n\n  $: opt      = {...defaults, ...cleanObject(ui)}\n  $: data.opt = opt\n  $: data.ui  = ui\n\n  let zoom = 0.5\n\n  $: facade = new Piece()\n    .add_name(\"Façade\")\n    .build(opt.largeur, opt.hauteur, opt.epaisseur)\n    .put(0, 0, 0, 'xyz')\n    .add_features('panneau-seul')\n\n  $: pieces = [facade]\n\n  $: state.pieces = pieces\n</script>\n\n<style>\n  form > * {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    max-width: 30em;\n  }\n  form > * > *:first-child {\n    flex-grow: 1;\n  }\n  hr.clear {\n    clear: both;\n    border: none;\n  }\n  table {\n    clear: both;\n  }\n</style>\n\n<Component bind:data={data} path={path} state={state} on:datachange>\n  <div slot=\"plan\">\n    <SVGDrawing pieces={pieces} name={`Façade ${data.name}`} />\n  </div>\n\n  <div class=\"main\" slot=\"dim\">\n    <form>\n    <label><span>Largeur    : </span><InputNumber min=0 bind:value={ui.largeur} def={defaults.largeur} force={defaults.force_largeur}/> mm</label>\n    <label><span>Hauteur    : </span><InputNumber min=0 bind:value={ui.hauteur} def={defaults.hauteur} force={defaults.force_hauteur}/> mm</label>\n    <label><span>Épaisseur  : </span><InputNumber min=0 bind:value={ui.epaisseur} def={defaults.epaisseur} force={defaults.force_epaisseur}/> mm</label>\n  </div>\n\n  <div slot=\"tables\">\n    <ListeDebit pieces={new Group(pieces, `Façade ${data.name}`, 'Facade')} />\n  </div>\n</Component>\n","<script>\n  import { onMount } from 'svelte';\n  import { cleanObject, pipeline } from '../utils.js';\n  import InputNumber from '../controls/InputNumber.svelte';\n  import InputCheckbox from '../controls/InputCheckbox.svelte';\n  import Component from '../Component.svelte';\n  import Cote from '../draw/Cote.svelte';\n  import Piece from '../pieces/piece.js';\n  import Group from '../pieces/Group.js';\n  import SVGPiece from '../pieces/SVGPiece.svelte';\n  import SVGDrawing from '../pieces/SVGDrawing.svelte';\n  import ListeDebit from '../ListeDebit.svelte'\n\n  export let path\n  export let initdata = {}\n\n  let data = {...initdata}\n\n  let defaults = {\n    quantite: 1,\n    largeur: 400,\n    hauteur: 150,\n    hauteur_tir_max: 150,\n    profondeur: 500,\n    epaisseur: 15,\n    profondeur_rainure: 9,\n    profondeur_queues_arrondes: 10,\n    jeu_rainure: 1,\n    jeu_lateral: 6,\n    jeu_dessous: 28,\n    jeu_dessus: 7,\n    epaisseur_fond: 10,\n    inclure_fond: true,\n    ...initdata.defaults\n  }\n\n  let opt = { ...initdata.opt }\n  let ui  = { ...(initdata.ui || initdata.opt) }\n  let tir = {}\n\n  $: tir = calculTiroir({\n      ...defaults,\n      ...cleanObject(ui)\n    })\n\n  $: opt = {\n      ...defaults,\n      ...tir,\n      ...cleanObject(ui),\n    }\n\n  $: data.opt = opt\n  $: data.ui  = ui\n  let state = {}\n\n  $: cote = new Piece()\n    .add_name(\"Coté\")\n    .add_features('cote')\n    .build(\n      opt.profondeur_tir - 2 * (opt.epaisseur - opt.profondeur_queues_arrondes),\n      opt.hauteur_tir,\n      opt.epaisseur)\n  $: cote_g = cote\n    .add_name(\"gauche\")\n    .put(\n      opt.jeu_lateral,\n      opt.jeu_dessous,\n      opt.epaisseur - opt.profondeur_queues_arrondes,\n      'zyx')\n  $: cote_d = cote\n    .add_name(\"droit\")\n    .put(\n      opt.jeu_lateral + opt.largeur_tir - opt.epaisseur,\n      opt.jeu_dessous,\n      opt.epaisseur - opt.profondeur_queues_arrondes,\n      'zyx')\n\n  $: face = new Piece()\n    .add_name(\"Face\")\n    .add_features('cote')\n    .build(opt.largeur_tir, opt.hauteur_tir, opt.epaisseur);\n  $: face_av = face\n    .add_name(\"avant\")\n    .put(\n      opt.jeu_lateral,\n      opt.jeu_dessous,\n      0,\n      'xyz')\n  $: face_ar = face\n    .add_name(\"arrière\")\n    .put(\n      opt.jeu_lateral,\n      opt.jeu_dessous,\n      opt.profondeur_tir - opt.epaisseur,\n      'xyz')\n\n  $: fond = new Piece()\n    .add_name(\"Fond tiroir\")\n    .add_features('panneau')\n    .build(\n      opt.largeur_tir - 2 * (opt.epaisseur - opt.profondeur_rainure + opt.jeu_rainure),\n      opt.profondeur_tir - (opt.epaisseur - opt.profondeur_rainure + opt.jeu_rainure),\n      opt.epaisseur_fond)\n    .put(\n      opt.jeu_lateral + opt.epaisseur - opt.profondeur_rainure + opt.jeu_rainure,\n      opt.jeu_dessous,\n      opt.epaisseur - opt.profondeur_rainure + opt.jeu_rainure,\n      'xzy')\n\n  $: pieces = [\n    opt.inclure_fond ? fond : null,\n    face_av, face_ar,\n    cote_g, cote_d,\n  ].filter(x => x != null).map(p => p.multiply_que(opt.quantite))\n\n  $: pieces_group = new Group(pieces, `Tiroir ${data.name}`, 'Tiroir')\n  $: state.pieces_group = pieces_group\n\n  function calculTiroir(opt){\n    let largeur_tir = opt.largeur - 2 * opt.jeu_lateral\n    let profondeur_tir = opt.profondeur - (opt.profondeur % 50)\n    let hauteur_tir = Math.min(opt.hauteur_tir_max, opt.hauteur - opt.jeu_dessous - opt.jeu_dessus)\n    return {largeur_tir, profondeur_tir, hauteur_tir}\n  }\n\n</script>\n\n<style>\n  form > * {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    max-width: 30em;\n  }\n  form > * > *:first-child {\n    flex-grow: 1;\n  }\n</style>\n\n<Component bind:data={data} state={state} path={path} on:datachange>\n  <div slot=\"plan\">\n    <SVGDrawing pieces={pieces_group} />\n  </div>\n\n  <div class=\"main\" slot=\"dim\">\n    <form>\n    <label><span>Quantité : </span><InputNumber min=1 bind:value={ui.quantite} def={defaults.quantite}/></label>\n    <hr/>\n    <label><span>Largeur logement   : </span><InputNumber min=0 bind:value={ui.largeur} def={defaults.largeur} force={defaults.force_largeur}/> mm</label>\n    <label><span>Hauteur logement  : </span><InputNumber min=0 bind:value={ui.hauteur} def={defaults.hauteur} force={defaults.force_hauteur}/> mm</label>\n    <label><span>Profondeur logement : </span><InputNumber min=0 bind:value={ui.profondeur} def={defaults.profondeur} force={defaults.force_profondeur}/> mm</label>\n    <hr/>\n    <label><span>Largeur   : </span><InputNumber min=0 bind:value={ui.largeur_tir} def={tir.largeur_tir}/> mm</label>\n    <label><span>Profondeur : </span><InputNumber min=0 bind:value={ui.profondeur_tir} def={tir.profondeur_tir}/> mm</label>\n    <label><span>Hauteur   : </span><InputNumber min=0 bind:value={ui.hauteur_tir} def={tir.hauteur_tir}/> mm</label>\n    <label><span>Hauteur max : </span><InputNumber min=0 bind:value={ui.hauteur_tir_max} def={defaults.hauteur_tir_max}/> mm</label>\n    <hr/>\n    <label><span>Profondeur queues d'arrondes : </span><InputNumber min=0 bind:value={ui.profondeur_queues_arrondes} def={defaults.profondeur_queues_arrondes}/> mm</label>\n    <label><span>Épaisseur : </span><InputNumber min=0 bind:value={ui.epaisseur} def={defaults.epaisseur} force={defaults.force_epaisseur}/> mm</label>\n    <label><span>Épaisseur fond : </span><InputNumber min=0 bind:value={ui.epaisseur_fond} def={defaults.epaisseur_fond}/> mm</label>\n    <label><span>Profondeur rainures : </span><InputNumber min=0 bind:value={ui.profondeur_rainure} def={defaults.profondeur_rainure}/> mm</label>\n    <label><span>Jeu paneau / rainure : </span><InputNumber min=0 bind:value={ui.jeu_rainure} def={defaults.jeu_rainure}/> mm</label>\n    <label><span>Inclure le fond</span><InputCheckbox bind:checked={ui.inclure_fond} def={defaults.inclure_fond} /></label>\n    </form>\n  </div>\n\n  <div slot=\"tables\">\n    <ListeDebit pieces={pieces_group} />\n  </div>\n</Component>\n","<script>\n  import { setContext } from 'svelte';\n  import { readable, writable, get } from 'svelte/store';\n  import { routeDeclare } from './route.js';\n  import Settings from './Settings.svelte';\n  import TreeItem from './TreeItem.svelte';\n  import TreeItemOption from './TreeItemOption.svelte';\n  import Ensemble from './ensembles/Ensemble.svelte';\n  import Porte from './ensembles/Porte.svelte';\n  import Caisson from './ensembles/Caisson.svelte';\n  import Etagere from './ensembles/Etagere.svelte';\n  import Facade from './ensembles/Facade.svelte';\n  import Tiroir from './ensembles/Tiroir.svelte';\n  let components = { Porte, Caisson, Ensemble, Etagere, Facade, Tiroir }\n\n  setContext('App-components',  components)\n\n  let filename = `meuble_${new Date().toISOString().slice(0,16).replace(/T/, '_').replace(/:/, '')}.json`\n  let initdata = {}\n  let data = {}\n\n  $: data = {...initdata}\n\n  $: console.log('App initdata =', initdata)\n  //$: console.log('App data =', data)\n\n  let agencement = 'horizontal'\n\n  let settings = writable(JSON.parse(localStorage.getItem('calcul-meubles-settings') || '{}'))\n  setContext('settings', settings)\n  settings.subscribe(settings => {\n    if(settings.agencement && agencement != settings.agencement) agencement = settings.agencement\n    //console.log(\"App data.settings =\")\n    data.settings = settings\n    localStorage.setItem('calcul-meubles-settings', JSON.stringify(settings))\n  })\n  $: settings.update(settings => ({\n      ...settings,\n      agencement: agencement,\n    }))\n\n  let item = JSON.parse(localStorage.getItem('calcul-meubles-data') || 'null')\n  let fileData = localStorage.getItem('calcul-meubles-file-data')\n  if(item) {\n    initdata = item.data\n    filename = item.filename\n  }\n\n  $: localStorage.setItem('calcul-meubles-data', JSON.stringify({data: data, filename: filename}))\n  $: localStorage.setItem('calcul-meubles-file-data', fileData)\n\n  function clear(){\n    if(!isSaved()) {\n      if(!confirm(\"Fichier non enregistré, voulez-vous continuer et perdre les modifications en cours?\")) return\n      localStorage.setItem('calcul-meubles-data-backup', localStorage.getItem('calcul-meubles-data'))\n      localStorage.setItem('calcul-meubles-file-data-backup', localStorage.getItem('calcul-meubles-file-data'))\n    }\n    localStorage.removeItem('calcul-meubles-data')\n    localStorage.removeItem('calcul-meubles-file-data')\n    window.location.reload()\n  }\n\n  function rename(){\n    let new_filename = prompt(\"Nom du fichier\", filename)\n    if (new_filename == null) return false\n    filename = new_filename\n    return true\n  }\n\n  function saveAs(){\n    save(true)\n  }\n\n  function ensureSaved(){\n    let item = localStorage.getItem('calcul-meubles-data')\n    if (item) {\n      if(save(false) == 'cancelled') return false;\n    }\n    return true;\n  }\n\n  function isSaved(){\n    if(data.children.length == 0) return true;\n    let json = JSON.stringify(data, null, 2)\n    if (json == fileData) return true;\n    console.log(\"isSaved() = false\", json, fileData)\n    return false;\n  }\n\n  function simpleSave(){\n    if(save(false) == 'already-saved') {\n      alert(\"Déjà enregistré\")\n    }\n  }\n\n  function save(saveAs){\n    if(!saveAs && isSaved()){\n      return 'already-saved';\n    }\n    let json = JSON.stringify(data, null, 2)\n\n    if(saveAs && !rename()) return 'cancelled';\n\n    let file = new window.File([json], filename, {\n      type: 'application/json'\n    })\n    let url = URL.createObjectURL(file);\n\n    try {\n      let a = document.createElement('a');\n      a.href = url;\n      a.style.display = 'none';\n      a.setAttribute('download', filename);\n\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n\n      localStorage.removeItem('calcul-meubles-data')\n      fileData = json\n    } finally {\n      URL.revokeObjectURL(url)\n    }\n  }\n\n  function open(){\n    if(!isSaved()) {\n      alert(\"Fichier non enregistré, veuillez enregistrer le fichier avant d'en ouvrir un nouveau.\")\n      return\n    }\n    let input = document.createElement('input');\n    input.style.display = 'none';\n    input.setAttribute('type', 'file')\n    input.addEventListener('change', (e) => {\n      let file = e.target.files[0];\n      if (!file) return\n\n      let reader = new FileReader();\n      reader.onload = (e) => {\n        initdata = JSON.parse(e.target.result)\n        settings.set(initdata.settings || {})\n        filename = file.name\n        fileData = e.target.result\n      }\n      reader.readAsText(file);\n    }, false)\n\n    document.body.appendChild(input);\n    input.click();\n    document.body.removeChild(input);\n  }\n\n  function moveTree(e){\n    window.location.hash = e.target.value\n  }\n\n  function openSettings(){\n    window.location.hash = '#/settings'\n  }\n\n  let root_target;\n  routeDeclare((route) => {\n    return route.root ? [root_target] : []\n  })\n\n  function onDataChange(e) {\n    //console.log(`App datachange{${Object.keys(e.detail).join()}} = %o`, e.detail);\n    data = e.detail.data\n  }\n</script>\n\n<style>\n  button, select {\n    margin: 0;\n  }\n  .tree button, .tree select {\n    padding: 1px;\n  }\n  .root {\n    display: flex;\n    grid-template-rows: 3rem auto;\n    grid-template-columns: minmax(0, 1fr) auto;\n    grid-template-areas:\n      \"toolbar toolbar\"\n      \"tree main\";\n    flex-flow: row nowrap;\n    height: 100%\n  }\n  .agencement-horizontal.root {\n    display: grid;\n    grid-template-columns: auto;\n    grid-template-areas:\n      \"toolbar\"\n      \"main\";\n  }\n  .root.agencement-vertical .tree {\n    flex: 0 0 auto\n  }\n  .toolbar {\n    padding: 4px;\n    grid-area: toolbar;\n    background-color: var(--light-bg-color);\n    border-bottom: solid 1px var(--border-color);\n  }\n  .open-save-buttons {\n    display: grid;\n    align-content: stretch;\n    grid-template-rows: repeat(2, 50fr);\n    grid-template-columns: repeat(2, auto);\n  }\n  .tree {\n    grid-area: tree;\n    background-color: var(--light-bg-color);\n    border-right: solid 1px var(--border-color);\n    overflow: auto;\n    width: 15rem;\n    resize: horizontal;\n  }\n  .tree :global(ul) {\n    padding-left: 1em;\n  }\n  .tree :global(ul) :global(ul) {\n    /*border-left: solid 1px var(--border-color);*/\n  }\n  .agencement-horizontal .tree {\n    display: none;\n  }\n  .root.agencement-vertical .tree-select {\n    display: none;\n  }\n  .main {\n    flex: 1 1 auto;\n    grid-area: main;\n    overflow: auto;\n    justify-self: stretch;\n  }\n\n  @media print {\n    .root, .main {\n      display: block !important;\n      overflow: visible !important;\n      height: auto;\n    }\n  }\n</style>\n\n<div class=\"root agencement-{agencement}\">\n\n  {#if agencement == 'horizontal'}\n  <div class=\"toolbar\">\n    <select on:change={moveTree} class=\"tree-select\">\n      <option value='#/settings'>Paramètres</option>\n      <TreeItemOption data={data}/>\n    </select>\n    <button on:click={clear}>Effacer</button>\n    <button on:click={simpleSave}>Enregistrer</button>\n    <button on:click={saveAs}>Enregistrer sous...</button>\n    <button on:click={open}>Ouvrir...</button>\n    {filename} <a href=\"@\" on:click|preventDefault={rename}>✎</a>\n    <div style=\"float: right\">\n      <label style=\"display: inline\">\n        Agencement :\n        <select bind:value={agencement}>\n          <option value='horizontal'>Horizontal</option>\n          <option value='vertical'>Vertical</option>\n        </select>\n      </label>\n      <button on:click={openSettings}>Paramètres...</button>\n    </div>\n  </div>\n  {/if}\n\n  <div class=\"tree\">\n    {#if agencement == 'vertical'}\n      <div class=\"open-save-buttons\">\n        <select bind:value={agencement}>\n          <option value='horizontal'>Agencement horizontal</option>\n          <option value='vertical'>Agencement vertical</option>\n        </select>\n        <button on:click={openSettings}>Paramètres...</button>\n        <button on:click={simpleSave}>Enregistrer</button>\n        <button on:click={saveAs}>Enregistrer sous...</button>\n        <button on:click={clear}>Nouveau</button>\n        <button on:click={open}>Ouvrir...</button>\n      </div>\n      <p>{filename} <a href=\"@\" on:click|preventDefault={rename}>✎</a></p>\n    {/if}\n    <ul>\n      <li>\n        <TreeItem data={data}/>\n      </li>\n      {#if agencement == 'vertical'}\n        <li><a href=\"@\" on:click|preventDefault={openSettings}>Paramètres...</a></li>\n      {/if}\n    </ul>\n  </div>\n\n  <div class=\"main\">\n    <Ensemble name=\"Meuble\" initdata={initdata} on:datachange={onDataChange} />\n    <div class=\"routable\" bind:this={root_target}>\n      <details>\n        <summary>Contenu du fichier</summary>\n        <pre id=\"json\">{JSON.stringify(data, null, 2)}</pre>\n      </details>\n    </div>\n    <Settings bind:settings={settings} />\n  </div>\n</div>\n","import App from './App.svelte';\n\nvar app = new App({\n\ttarget: document.body\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","call","this","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","set_input_value","input","set_style","key","important","style","setProperty","select_option","select","option","__value","selected","select_value","selected_option","querySelector","toggle_class","toggle","classList","current_component","set_current_component","component","get_current_component","Error","createEventDispatcher","type","detail","callbacks","$$","e","createEvent","initCustomEvent","custom_event","setContext","context","set","getContext","get","bubble","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","add_flush_callback","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","p","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","outro_and_destroy_block","lookup","update_keyed_each","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","n","old_indexes","new_blocks","new_lookup","Map","deltas","child_ctx","abs","will_move","did_move","m","first","new_block","old_block","new_key","old_key","bind","index","props","bound","create_component","mount_component","on_mount","on_destroy","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","prop_values","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","$destroy","indexOf","splice","subscriber_queue","routeInfo","hash","path","substr","mcomp","match","msettings","component_id","component_selector","component_path","settings","root","routeDeclare","cb","previousTargets","onHashChange","t","console","log","remove","window","location","cleanObject","keys","reduce","pipeline","operations","res","nextId","id","item","placeholder","min","step","def","force","size","ui","title","checked","tristate","prev","curr","readOnly","postes_estimations","components","join","indice","JSON","stringify","cubeprice","cubemargin","settings_opened","componentNames","subscribe","root_element","addEstim","estimName","prompt","h","removeEstim","idx","renameEstim","poste","newName","route","display","file","files","reader","FileReader","onload","parse","result","readAsText","body","click","comp","prefix","indent","polyline","piece","pos","projection_polyline","co","warn","pieces","projection_position","svgElement","zoom","pieces_list","individual","xmax","ymax","zmax","bounding_box","b0","b1","markup","outerHTML","filename","File","url","URL","createObjectURL","href","revokeObjectURL","get_position","get_orient","orient","Group","component_type","x","y","z","features","concat","prefix_name","nameprefix","total","groups","flat_groups","s","surface","nombre_tenons","update_new","prototype","largeur","bb","xmin","hauteur","ymin","profondeur","zmin","bounds","axis","toLowerCase","dim","arguments","includes","count_features","counts","feat","dispatch","layout","component_layout","state","childrenState","dispatchDatachange","renameChild","deleteChild","confirm","children2","onDataChange","setLayout","addChild","show","pieces_drawings","childrenPos","defaultChildrenPos","drawings","resizeChildrenPos","_","pieces_group","g","position","calculEstimations","pieceg","constants","group","postes","estim","calculEstimation","computed","base_value","tot","calculShallowGroupEstimations","epaisseur","base_unit","cst_key","val","toFixed","temps","all_mins","onlyMins","mins","estimations","epaisseurs","find","nb_pieces","nb_panneaux","m2_panneaux","dimension_x","dimension_y","dimension_z","nb_tenons","name_list","que","string_dimentions","string_arrasement","longueur","epaisseur_plateau","cubage","prix","merge","separer","totaux","par_epaiss","par_type","statistics","pieces2","names","nom","split","quantite","pieces3","values","signature","family","total_cube","total_prix","total_group","pieces_par_epaisseur","stats_epaisseur","panneaux","stat","calculStatistics","statistics_epaisseurs","ep","initdata","defaults","initdataChanged","updateData","defname","default_value_id","random","toString","substring","inner_val","findDefName","op","textContent","error","text_suffix","zstart","row","zlength","suffix","rotate","reverse","dim2","start","Piece","arrasement","Exception","longueur_tenon1","longueur_tenon2","names_list","idval","obj","dim1","dim3","sign","dims","dx","dy","dz","_1","t1x","_2","t2x","_3","t1y","_4","t2y","dx1","floor","dx2","dy1","dy2","factor","prix_cube","sort","other","assert","profondeur_profil","profondeur_tenons","ferrage","force_ferrage","force_largeur","force_hauteur","force_epaisseur","largeur_montants","largeur_traverses","largeur_traverse_h","largeur_traverse_b","epaisseur_panneau","profondeur_rainure","jeu_rainure","inclure_panneau","encastree","jeu_encastrement","opt","montant","add_name","add_features","build","montant_g","put","montant_d","traverse","ajout_tenons","traverse_xpos","traverse_h","traverse_b","panneau","multiply_que","casiers","panneau_dessus","colonnes","panneau_dessous","montants","panneau_dos","tiroir","porte","double","actif","panneaux_actifs","droite","gauche","facade","num_etageres","epaisseur_montants","profondeur_tenons_cotes","montants_inter_longueur_tenon","defaultPosition","profondeur_tenons_intermediaire","hauteur_traverses","hauteur_traverse","num_colonnes","largeur_colonnes","largeur_definie","num_casiers_colonnes","hauteur_casiers_colonnes","cas","hauteur_definie","ui_colonnes","ui_montants","selection_casier_input","updateSubdivisions","opt2","num_casiers","calculLargeurColonnes","largeurs","cols","espace_a_repartir","largeurs_definies","cols_a_calculer","espace_restant","espace_par_col","calculColonnesCasiers","num","ui_colonne","xpos","col","calculCasiers","calculPositionCasiers","colonne","hauteurs","hauteurs_definies","casiers_a_calculer","espace_par_casier","j","ui_casier","casier","jj","ypos","calculSubdivisionMontants","subdivisions_montants","ui_montant","casiers_g","casiers_d","hauteurs_g","hauteurs_d","traverses","hh","h1","h0","y1","y2","ui_panneaux_actifs","arr","last","cote","calculEnfants","source","creePorteColonne","creeEtageres","supprimeEtageres","creeTiroirCasier","creePorteCasier","child","configurePorteColonne","configurePorteFacadeCasier","configureTiroir","configureEtagere","child_idx","findIndex","demi","encastre","epaisseur_porte","typePorte","force_profondeur","variants","all_variants","child_idx_g","child_idx_d","namePrefix","side","retrait","piece_panneau","all_pieces","child_pieces","selection_casier_i","selection_casier_j","parseInt","selection_casier","montants_template","montant_ar_g","montant_av_g","montant_ar_d","montant_av_d","traverses_cote","usine_tenons","traverse_cote_h_g","traverse_cote_b_g","traverse_cote_h_d","traverse_cote_b_d","traverse_ar_h","traverse_ar_b","traverse_av_h","traverse_av_b","panneaux_haut_bas","panneau_h","panneau_b","panneaux_dos","montants_cloisons","montants_cloisons_av","montants_cloisons_ar","traverses_cote_inter_caissons","sub","panneaux_cote_et_cloisons","traverses_cloisons","traverses_cloisons_h","traverses_cloisons_b","traverses_inter2_av_ar","traverses_inter2_av","tr","traverses_inter2_ar","panneau_inter2_dessous","etagere","largeur_tir","profondeur_tir","hauteur_tir","hauteur_tir_max","profondeur_queues_arrondes","epaisseur_fond","inclure_fond","jeu_lateral","jeu_dessous","jeu_dessus","tir","calculTiroir","cote_g","cote_d","face","face_av","face_ar","fond","moveTree","openSettings","Porte","Caisson","Ensemble","Etagere","Facade","Tiroir","Date","toISOString","replace","agencement","stop","subscribers","new_value","run_queue","invalidate","subscriber","writable","localStorage","getItem","setItem","root_target","fileData","rename","new_filename","isSaved","json","save","saveAs","removeItem","reload","alert"],"mappings":"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"}